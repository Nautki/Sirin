{"$message_type":"diagnostic","message":"cannot find trait `ReadLsm6dsv` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":222,"byte_end":230,"line_start":12,"line_end":12,"column_start":1,"column_end":9,"is_primary":false,"text":[{"text":"dev_csr! {","highlight_start":1,"highlight_end":9}],"label":"similarly named trait `ReadLsm6dso` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":222,"byte_end":45317,"line_start":12,"line_end":855,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"dev_csr! {","highlight_start":1,"highlight_end":11},{"text":"    dev Lsm6dso{","highlight_start":1,"highlight_end":17},{"text":"        regs{","highlight_start":1,"highlight_end":14},{"text":"           0x01 FUNC_CFG_ACCESS rw //enables access to some embedded functions registers","highlight_start":1,"highlight_end":89},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7 emb_func, //embedded functions config register access, default 0","highlight_start":1,"highlight_end":83},{"text":"                6 shub_reg, //sensor hub config reg access, default 0","highlight_start":1,"highlight_end":70},{"text":"                3 fsm_wr_ctrl, //let FSM control the CTRL registers, default 0","highlight_start":1,"highlight_end":79},{"text":"                2 global_reset, //global reset of the device, default 0","highlight_start":1,"highlight_end":72},{"text":"                1 spi2_reset, //pulse 1 to reset the control registers of SPI2, default 0","highlight_start":1,"highlight_end":90},{"text":"                0 ois_from_ui, //Enables control of OIS config from main UI, default 0","highlight_start":1,"highlight_end":87},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x02 PIN_CTRL rw //Pull-up control register for SDO, OCS-Aux, and SDO_Aux pins","highlight_start":1,"highlight_end":90},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7 ois_pullup_L, //1 disables pull-up on OCS_Aux and SDO_Aux pins, 0 enables, default 0","highlight_start":1,"highlight_end":103},{"text":"                6 sdo_pullup, //Enables pull-up on SDO pin, default 0","highlight_start":1,"highlight_end":70},{"text":"                5 post_reset_action, //0: config reset (SW reset + dyn addr reset), 1: global reset (POR reset)","highlight_start":1,"highlight_end":112},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x03 IF_CFG rw","highlight_start":1,"highlight_end":26},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7 sda_pullup, //Enable pull-up on SDA pin, default 0","highlight_start":1,"highlight_end":69},{"text":"                6 i2c_aux_pullup, //1: enable internal pull-up on aux I2C line","highlight_start":1,"highlight_end":79},{"text":"                5 anti_spike_filter, //1: anti-spike on SCL and SDA always on, 0: filter managed by protocol","highlight_start":1,"highlight_end":109},{"text":"                4 interrupt_active, //0: active high interrupt, 1: active low interrupt, default 0","highlight_start":1,"highlight_end":99},{"text":"                3 pp_od, //Push-pull/open-drain selection on INT1 and INT2 pins. Default value: 0 (0: push-pull mode; 1: open-drain mode)","highlight_start":1,"highlight_end":138},{"text":"                2 spi_mode_select, //0: 4-wire interface, 1: 3-wire interface, default 0","highlight_start":1,"highlight_end":89},{"text":"                0 i2c_disable, //0: i2c and i3c enabled, 1: disabled, default 0","highlight_start":1,"highlight_end":80},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x06 ODR_TRIG_CFG rw odr_data_amount, //ODR-triggered mode configuration register (R/W), determines amount of data generated during ref period in ODR-triggered mode. Allowed vals: 0, 4-255","highlight_start":1,"highlight_end":200},{"text":"           0x07 FIFO_CTRL1 rw fifo_wtm, //FIFO watermark threshold, 1 LSB = TAG (1 byte) + 1 sensor (6 bytes) in FIFO, flag rises when #bytes in FIFO > threshold","highlight_start":1,"highlight_end":162},{"text":"           0x08 FIFO_CTRL2 rw","highlight_start":1,"highlight_end":30},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7 stop_fifo_on_wtm, //Limit FIFO depth to threshold level","highlight_start":1,"highlight_end":74},{"text":"                6 fifo_compr, //Enable compression","highlight_start":1,"highlight_end":51},{"text":"                4 fifo_batch_odrchg, //Batch ODR nCHANGE sensor in FIFO","highlight_start":1,"highlight_end":72},{"text":"                2..1 fifo_uncompr_rate, //Configures the rate of written uncompressed data (default 0). 0: do not force uncompressed data writing, 1: uncompressed data every 8 batch, 2: every 16 batch, 3: every 32 batch","highlight_start":1,"highlight_end":220},{"text":"                0 fifo_dualc_fsm //Enable FSM-triggered batching of channel 2 when available, 0 disabled, 1 enabled, default 0","highlight_start":1,"highlight_end":127},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x09 FIFO_CTRL3 rw","highlight_start":1,"highlight_end":30},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7..4 fifo_gyro_bdr, //Select batch data rate for gyro data. 0000: gyro not batched, 0001: 1.875Hz, otherwise rate = 1.875*2^{input}, max input 1100","highlight_start":1,"highlight_end":164},{"text":"                3..0 fifo_accel_bdr //Select batch data rate for accelerometer. Same as gyro.","highlight_start":1,"highlight_end":94},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x0A FIFO_CTRL4 rw","highlight_start":1,"highlight_end":30},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7..6 fifo_ts_decim, //Select decimation for timestamp batching. 00: timestamp not batched. 01: write rate = max(fifo_accel_bdr, fifo_gyro_bdr). 10: write rate = max(fifo_accel_bdr, fifo_gyro_bdr)/8.  11: write rate = max(fifo_accel_bdr, fifo_gyro_bdr)/32.","highlight_start":1,"highlight_end":272},{"text":"                5..4 fifo_temp_bdr, //Select batch data rate for temperature. 00: not batched. 01: 1.875Hz. 10: 15Hz. 11: 60Hz.","highlight_start":1,"highlight_end":128},{"text":"                3 fifo_gyro_eis, //Enable gyroscope EIS value batching, 0 disabled, 1 enabled, default 0.","highlight_start":1,"highlight_end":106},{"text":"                2..0 fifo_mode //Mode selection.","highlight_start":1,"highlight_end":49},{"text":"                    //000: FIFO disabled.","highlight_start":1,"highlight_end":42},{"text":"                    //001: FIFO mode: stop collection when FIFO is full.","highlight_start":1,"highlight_end":73},{"text":"                    //010: continuousWTM-to-full mode: cont. mode with wtm until","highlight_start":1,"highlight_end":81},{"text":"                    //trigger is deasserted, then FIFO mode,","highlight_start":1,"highlight_end":61},{"text":"                    //011: continuous-to-FIFO mode: continuous until trigger is","highlight_start":1,"highlight_end":80},{"text":"                    //deasserted, then FIFO mode.","highlight_start":1,"highlight_end":50},{"text":"                    //100: bypass-to-continuous mode: FIFO disabled until trigger","highlight_start":1,"highlight_end":82},{"text":"                    //is deasserted, then continuous mode.","highlight_start":1,"highlight_end":59},{"text":"                    //101: reserved.","highlight_start":1,"highlight_end":37},{"text":"                    //110: continuous mode: if FIFO is full, new samples overwrite","highlight_start":1,"highlight_end":83},{"text":"                    //old ones.","highlight_start":1,"highlight_end":32},{"text":"                    //111: bypass-to-FIFO mode: FIFO disabled until trigger is","highlight_start":1,"highlight_end":79},{"text":"                    //deasserted, then FIFO mode.","highlight_start":1,"highlight_end":50},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x0B COUNTER_BDR_REG1 rw","highlight_start":1,"highlight_end":36},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                6..5 trig_ctr_bdr, //Select the trigger for the internal counter of batch events for the accel, gyro, and EIS gyro.","highlight_start":1,"highlight_end":132},{"text":"                    //00: accel batch event.","highlight_start":1,"highlight_end":45},{"text":"                    //01: gyro batch event.","highlight_start":1,"highlight_end":44},{"text":"                    //10-11: gyro EIS batch event.","highlight_start":1,"highlight_end":51},{"text":"                1..0 batch_counter_thresh[0..1] //Sets the threshold for the internal","highlight_start":1,"highlight_end":86},{"text":"                    //counter of batch events. When this counter reaches the","highlight_start":1,"highlight_end":77},{"text":"                    //threshold, the counter is reset and counter_bdr_reached is","highlight_start":1,"highlight_end":81},{"text":"                    //set to 1.","highlight_start":1,"highlight_end":32},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x0C COUNTER_BDR_REG2 rw batch_counter_thresh[2..9],","highlight_start":1,"highlight_end":64},{"text":"           0x0D INT1_CTRL rw //INT1 pin control register.","highlight_start":1,"highlight_end":58},{"text":"               //Output is the OR combination of all selected here and in MD1_CFG.","highlight_start":1,"highlight_end":83},{"text":"               //All bits default 0.","highlight_start":1,"highlight_end":37},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                6 int1_cnt_bdr, //Enables COUNTER_BDR_IA interrupt on INT1 pin.","highlight_start":1,"highlight_end":80},{"text":"                5 int1_fifo_full, //Enables FIFO full flag interrupt on INT1 pin.","highlight_start":1,"highlight_end":82},{"text":"                4 int1_fifo_over, //Enables FIFO overrun interrupt on INT1 pin.","highlight_start":1,"highlight_end":80},{"text":"                3 int1_fifo_thresh, //Enables FIFO threshold interrupt on INT1 pin.","highlight_start":1,"highlight_end":84},{"text":"                1 int1_gyro_rdy, //Enables gyro data-ready interrupt on INT1 pin.","highlight_start":1,"highlight_end":82},{"text":"                0 int1_accel_rdy //Enables accel data-ready interrupt on INT1 pin.","highlight_start":1,"highlight_end":83},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x0E INT2_CTRL rw //INT2 pin control register.","highlight_start":1,"highlight_end":58},{"text":"               //Output is the OR combination of all selected here and in MD2_CFG.","highlight_start":1,"highlight_end":83},{"text":"               //All defaults 0.","highlight_start":1,"highlight_end":33},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7 int2_endop, //Enables routing the embedded-func ENDOP signal to","highlight_start":1,"highlight_end":82},{"text":"                    //the INT2 pin.","highlight_start":1,"highlight_end":36},{"text":"                6 int2_cnt_bdr, //Enables COUNTER_BDR_IA interrupt on INT2 pin.","highlight_start":1,"highlight_end":80},{"text":"                5 int2_fifo_full, //Enables FIFO full interrupt on INT2 pin.","highlight_start":1,"highlight_end":77},{"text":"                4 int2_fifo_over, //Enables FIFO overrun interrupt on INT2 pin.","highlight_start":1,"highlight_end":80},{"text":"                3 int2_fifo_thresh, //Enables FIFO threshold interrupt on INT2 pin.","highlight_start":1,"highlight_end":84},{"text":"                2 int2_eis_rdy, //Enables gyro EIS data-ready interrupt on INT2 pin.","highlight_start":1,"highlight_end":85},{"text":"                1 int2_gyro_rdy, //Enables gyro data-ready interrupt on INT2 pin.","highlight_start":1,"highlight_end":82},{"text":"                0 int2_accel_rdy //Enables accel data-ready interrupt on INT2 pin.","highlight_start":1,"highlight_end":83},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x0F WHO_AM_I r whoami, //whoami value. Read-only, fixed at 0x70.","highlight_start":1,"highlight_end":77},{"text":"           0x10 CTRL1 rw","highlight_start":1,"highlight_end":25},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                6..4 accel_mode, //Accel op mode selection.","highlight_start":1,"highlight_end":60},{"text":"                    //000: high-performance mode (default).","highlight_start":1,"highlight_end":60},{"text":"                    //001: high-accuracy ODR mode.","highlight_start":1,"highlight_end":51},{"text":"                    //010: reserved.","highlight_start":1,"highlight_end":37},{"text":"                    //011: ODR-triggered mode.","highlight_start":1,"highlight_end":47},{"text":"                    //100: low-power mode 1 (2 mean).","highlight_start":1,"highlight_end":54},{"text":"                    //101: low-power mode 2 (4 mean).","highlight_start":1,"highlight_end":54},{"text":"                    //110: low-power mode 3 (8 mean).","highlight_start":1,"highlight_end":54},{"text":"                    //111: normal mode.","highlight_start":1,"highlight_end":40},{"text":"                3..0 accel_odr //Accel ODR selection.","highlight_start":1,"highlight_end":54},{"text":"                    //0000: power down (default)","highlight_start":1,"highlight_end":49},{"text":"                    //0001: 1.875Hz (low power)","highlight_start":1,"highlight_end":48},{"text":"                    //0010: 7.5Hz (high-performance, normal)","highlight_start":1,"highlight_end":61},{"text":"                    //0011: 15Hz (LP, HP, normal)","highlight_start":1,"highlight_end":50},{"text":"                    //0100: 30Hz (LP, HP, normal)","highlight_start":1,"highlight_end":50},{"text":"                    //0101: 60Hz (LP, HP, normal)","highlight_start":1,"highlight_end":50},{"text":"                    //0110: 120Hz (LP, HP, normal)","highlight_start":1,"highlight_end":51},{"text":"                    //0111: 240Hz (LP, HP, normal)","highlight_start":1,"highlight_end":51},{"text":"                    //1000: 480Hz (HP, normal)","highlight_start":1,"highlight_end":47},{"text":"                    //1001: 960Hz (HP, normal)","highlight_start":1,"highlight_end":47},{"text":"                    //1010: 1.92kHz (HP, normal)","highlight_start":1,"highlight_end":49},{"text":"                    //1011: 3.84kHz (HP)","highlight_start":1,"highlight_end":41},{"text":"                    //1100: 7.68kHz (HP)","highlight_start":1,"highlight_end":41},{"text":"                    //others: reserved","highlight_start":1,"highlight_end":39},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x11 CTRL2 rw","highlight_start":1,"highlight_end":25},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                6..4 gyro_mode, //Gyro op mode select.","highlight_start":1,"highlight_end":55},{"text":"                    //000: high-performance (default)","highlight_start":1,"highlight_end":54},{"text":"                    //001: high-accuracy ODR","highlight_start":1,"highlight_end":45},{"text":"                    //010: reserved","highlight_start":1,"highlight_end":36},{"text":"                    //011: ODR-triggered","highlight_start":1,"highlight_end":41},{"text":"                    //100: sleep","highlight_start":1,"highlight_end":33},{"text":"                    //101: low-power","highlight_start":1,"highlight_end":37},{"text":"                    //110-111: reserved","highlight_start":1,"highlight_end":40},{"text":"                3..0 gyro_odr //Accel ODR selection.","highlight_start":1,"highlight_end":53},{"text":"                    //0000: power down (default)","highlight_start":1,"highlight_end":49},{"text":"                    //0010: 7.5Hz (high-performance, normal)","highlight_start":1,"highlight_end":61},{"text":"                    //0011: 15Hz (LP, HP, normal)","highlight_start":1,"highlight_end":50},{"text":"                    //0100: 30Hz (LP, HP, normal)","highlight_start":1,"highlight_end":50},{"text":"                    //0101: 60Hz (LP, HP, normal)","highlight_start":1,"highlight_end":50},{"text":"                    //0110: 120Hz (LP, HP, normal)","highlight_start":1,"highlight_end":51},{"text":"                    //0111: 240Hz (LP, HP, normal)","highlight_start":1,"highlight_end":51},{"text":"                    //1000: 480Hz (HP, normal)","highlight_start":1,"highlight_end":47},{"text":"                    //1001: 960Hz (HP, normal)","highlight_start":1,"highlight_end":47},{"text":"                    //1010: 1.92kHz (HP, normal)","highlight_start":1,"highlight_end":49},{"text":"                    //1011: 3.84kHz (HP)","highlight_start":1,"highlight_end":41},{"text":"                    //1100: 7.68kHz (HP)","highlight_start":1,"highlight_end":41},{"text":"                    //others: reserved","highlight_start":1,"highlight_end":39},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x12 CTRL3 rw","highlight_start":1,"highlight_end":25},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7 mem_reset, //Resets memory content. Automatically clears.","highlight_start":1,"highlight_end":76},{"text":"                6 block_upd, //Block data update.","highlight_start":1,"highlight_end":50},{"text":"                    //0: continuous update","highlight_start":1,"highlight_end":43},{"text":"                    //1: output registers are not updated until LSB or MSB have been","highlight_start":1,"highlight_end":85},{"text":"                    //read.","highlight_start":1,"highlight_end":28},{"text":"                    //default: 1","highlight_start":1,"highlight_end":33},{"text":"                2 auto_inc, //Auto-increment addresses during multiple-byte serial","highlight_start":1,"highlight_end":83},{"text":"                    //access. Default 1.","highlight_start":1,"highlight_end":41},{"text":"                    //0: disabled, 1: enabled.","highlight_start":1,"highlight_end":47},{"text":"                0 sw_reset //Software reset, resets all control registers.","highlight_start":1,"highlight_end":75},{"text":"                    //Automatically cleared. Default 0.","highlight_start":1,"highlight_end":56},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x13 CTRL4 rw","highlight_start":1,"highlight_end":25},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                4 int2_on_int1, //OR INT2 output onto INT1 output","highlight_start":1,"highlight_end":66},{"text":"                3 mask_rdy, //Mask data-ready signal, default 0 (disabled),","highlight_start":1,"highlight_end":76},{"text":"                    //until filter setting ends.","highlight_start":1,"highlight_end":49},{"text":"                2 int2_temp_dry, //Enable temperature sensor data-ready interrupt","highlight_start":1,"highlight_end":82},{"text":"                    //on INT2 pin.","highlight_start":1,"highlight_end":35},{"text":"                1 pulsed_rdy, //Enable pulsed data-ready mode.","highlight_start":1,"highlight_end":63},{"text":"                0 int2_input_ah //Is INT2 input trigger active high","highlight_start":1,"highlight_end":68},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x14 CTRL5 rw","highlight_start":1,"highlight_end":25},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                2..1 bus_act_sel, //Bus available time select for IBI.","highlight_start":1,"highlight_end":71},{"text":"                    //00: 2u.","highlight_start":1,"highlight_end":30},{"text":"                    //01: 50u (default).","highlight_start":1,"highlight_end":41},{"text":"                    //10: 1ms.","highlight_start":1,"highlight_end":31},{"text":"                    //11: 25ms.","highlight_start":1,"highlight_end":32},{"text":"                0 int_i3c //Enables INT pin when I3C is enabled. Default 0.","highlight_start":1,"highlight_end":76},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x15 CTRL6 rw","highlight_start":1,"highlight_end":25},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                6..4 gyro_lpbw, //Gyro low-pass bandwidth select. See datasheet.","highlight_start":1,"highlight_end":81},{"text":"                3..0 gyro_fs //Gyro UI chain full-scale select.","highlight_start":1,"highlight_end":64},{"text":"                    //0000: �125dps (default)","highlight_start":1,"highlight_end":46},{"text":"                    //0001: �250dps","highlight_start":1,"highlight_end":36},{"text":"                    //0010: �500dps","highlight_start":1,"highlight_end":36},{"text":"                    //0011: �1000dps","highlight_start":1,"highlight_end":37},{"text":"                    //0100: �2000dps","highlight_start":1,"highlight_end":37},{"text":"                    //1100: �4000dps","highlight_start":1,"highlight_end":37},{"text":"                    //Others: reserved","highlight_start":1,"highlight_end":39},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x16 CTRL7 rw","highlight_start":1,"highlight_end":25},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                0 gyro_lp_enable //enable gyro low-pass filter","highlight_start":1,"highlight_end":63},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x17 CTRL8 rw","highlight_start":1,"highlight_end":25},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7..5 accel_hplp_bw, //Accel high-pass and low-pass bandwidth.","highlight_start":1,"highlight_end":78},{"text":"                    //See datasheet because big table.","highlight_start":1,"highlight_end":55},{"text":"                3 accel_dc, //Enables dual-channel mode. Default 0 (disabled).","highlight_start":1,"highlight_end":79},{"text":"                1..0 accel_fs //Accel full-scale select.","highlight_start":1,"highlight_end":57},{"text":"                    //00: �2g","highlight_start":1,"highlight_end":30},{"text":"                    //01: �4g","highlight_start":1,"highlight_end":30},{"text":"                    //10: �8g","highlight_start":1,"highlight_end":30},{"text":"                    //11: �16g","highlight_start":1,"highlight_end":31},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x18 CTRL9 rw","highlight_start":1,"highlight_end":25},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                6 accel_hpref, //Enabled accel high-pass reference mode. Default 0.","highlight_start":1,"highlight_end":84},{"text":"                5 accel_fast_settle, //Enables filter fast settling mode. Def 0.","highlight_start":1,"highlight_end":81},{"text":"                4 accel_hp_slope, //Accel slope filter/HP filter selection.","highlight_start":1,"highlight_end":76},{"text":"                    //0: LP filter path","highlight_start":1,"highlight_end":40},{"text":"                    //1: HP filter path","highlight_start":1,"highlight_end":40},{"text":"                3 accel_lpf2, //enables second stage filtering for accel","highlight_start":1,"highlight_end":73},{"text":"                1 accel_ofs_w, //Accel user register offset weight","highlight_start":1,"highlight_end":67},{"text":"                    //0: 2^-10g/LSB","highlight_start":1,"highlight_end":36},{"text":"                    //1: 2^-6g/LSB","highlight_start":1,"highlight_end":35},{"text":"                0 accel_ofs_en //Enables accel user offset correction block.","highlight_start":1,"highlight_end":77},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x19 CTRL10 rw","highlight_start":1,"highlight_end":26},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                6 emb_debug, //Enables embedded function debug mode","highlight_start":1,"highlight_end":68},{"text":"                3..2 gyro_st, //Gyro self-test select","highlight_start":1,"highlight_end":54},{"text":"                    //00: normal (default)","highlight_start":1,"highlight_end":43},{"text":"                    //01: positive sign","highlight_start":1,"highlight_end":40},{"text":"                    //10: negative sign","highlight_start":1,"highlight_end":40},{"text":"                    //11: reserved","highlight_start":1,"highlight_end":35},{"text":"                1..0 accel_st //Accel self-test select","highlight_start":1,"highlight_end":55},{"text":"                    //00: normal (default)","highlight_start":1,"highlight_end":43},{"text":"                    //01: positive sign","highlight_start":1,"highlight_end":40},{"text":"                    //10: negative sign","highlight_start":1,"highlight_end":40},{"text":"                    //11: reserved","highlight_start":1,"highlight_end":35},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x1A CTRL_STATUS r","highlight_start":1,"highlight_end":30},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                2 ctrl_status //Flag that indicates the current controller of","highlight_start":1,"highlight_end":78},{"text":"                    //the device's config registers. Default 0.","highlight_start":1,"highlight_end":64},{"text":"                    //0: All registers and configs are available from the standard","highlight_start":1,"highlight_end":83},{"text":"                    //interface.","highlight_start":1,"highlight_end":33},{"text":"                    //1: Some registers and configs are under FSM control and are ","highlight_start":1,"highlight_end":83},{"text":"                    //in read-only mode from the standard interface.","highlight_start":1,"highlight_end":69},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x1B FIFO_STATUS1 r fifo_diff[0..7], //Number of unread sensor data","highlight_start":1,"highlight_end":79},{"text":"                //(TAG + 6 bytes) stored in FIFO.","highlight_start":1,"highlight_end":50},{"text":"           0x1C FIFO_STATUS2 r","highlight_start":1,"highlight_end":31},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7 fifo_wtm_ia, //FIFO watermark status","highlight_start":1,"highlight_end":55},{"text":"                6 fifo_ovr_ia, //FIFO overrun status","highlight_start":1,"highlight_end":53},{"text":"                5 fifo_full_ia, //FIFO full status, 1: will be full at next ODR","highlight_start":1,"highlight_end":80},{"text":"                4 ctr_bdr_ia, //COUNTER_BDR_IA status, shows if threshold reached","highlight_start":1,"highlight_end":82},{"text":"                3 fifo_ovr_latched, //FIFO latched overrun status","highlight_start":1,"highlight_end":66},{"text":"                0 fifo_diff[8]","highlight_start":1,"highlight_end":31},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x1D ALL_INT_SRC r //Source register for all interrupts","highlight_start":1,"highlight_end":67},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7 emb_ia, //embedded func interrupt status","highlight_start":1,"highlight_end":59},{"text":"                6 shub_ia, //sensor hub interrupt status","highlight_start":1,"highlight_end":57},{"text":"                5 sleep_ia, //Detects change in activity/inactivity status","highlight_start":1,"highlight_end":75},{"text":"                4 d6d_ia, //Orientation change status","highlight_start":1,"highlight_end":54},{"text":"                2 tap_ia, //single or double tap event detection status","highlight_start":1,"highlight_end":72},{"text":"                1 wu_ia, //wake event status","highlight_start":1,"highlight_end":45},{"text":"                0 ff_ia //free-fall event status","highlight_start":1,"highlight_end":49},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x1E STATUS_REG r","highlight_start":1,"highlight_end":29},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7 ts_endcnt, //Timestamp overflow alert","highlight_start":1,"highlight_end":56},{"text":"                5 ois_rdy, //Accel or gyro OIS data ready","highlight_start":1,"highlight_end":58},{"text":"                4 gda_eis, //EIS gyro data ready","highlight_start":1,"highlight_end":49},{"text":"                2 temp_da, //temp data available","highlight_start":1,"highlight_end":49},{"text":"                1 gyro_da, //gyro data available","highlight_start":1,"highlight_end":49},{"text":"                0 accel_da //accel data available","highlight_start":1,"highlight_end":50},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x20 OUT_TEMP_L r temp_data[8..15], //Temp data output register","highlight_start":1,"highlight_end":75},{"text":"           0x21 OUT_TEMP_H r temp_data[0..7],","highlight_start":1,"highlight_end":46},{"text":"           0x22 OUTX_L_G r gyro_pitch_rate[8..15], //Gyro pitch axis angular rate","highlight_start":1,"highlight_end":82},{"text":"           0x23 OUTX_H_G r gyro_pitch_rate[0..7],","highlight_start":1,"highlight_end":50},{"text":"           0x24 OUTY_L_G r gyro_roll_rate[8..15], //Gyro roll axis angular rate","highlight_start":1,"highlight_end":80},{"text":"           0x25 OUTY_H_G r gyro_roll_rate[0..7],","highlight_start":1,"highlight_end":49},{"text":"           0x26 OUTZ_L_G r gyro_yaw_rate[8..15], //Gyro yaw axis angular rate","highlight_start":1,"highlight_end":78},{"text":"           0x27 OUTZ_H_G r gyro_yaw_rate[0..7],","highlight_start":1,"highlight_end":48},{"text":"           0x28 OUTX_L_A r accel_x[8..15], //Accel x output","highlight_start":1,"highlight_end":60},{"text":"           0x29 OUTX_H_A r accel_x[0..7],","highlight_start":1,"highlight_end":42},{"text":"           0x2A OUTY_L_A r accel_y[8..15], //Accel y output","highlight_start":1,"highlight_end":60},{"text":"           0x2B OUTY_H_A r accel_y[0..7],","highlight_start":1,"highlight_end":42},{"text":"           0x2C OUTZ_L_A r accel_z[8..15], //Accel z output","highlight_start":1,"highlight_end":60},{"text":"           0x2D OUTZ_H_A r accel_z[0..7],","highlight_start":1,"highlight_end":42},{"text":"           0x2E UI_OUTX_L_G_OIS_EIS r x_ois_eis[8..15], //x axis OIS/EIS","highlight_start":1,"highlight_end":73},{"text":"           0x2F UI_OUTX_H_G_OIS_EIS r x_ois_eis[0..7],","highlight_start":1,"highlight_end":55},{"text":"           0x30 UI_OUTY_L_G_OIS_EIS r y_ois_eis[8..15], //y axis OIS/EIS","highlight_start":1,"highlight_end":73},{"text":"           0x31 UI_OUTY_H_G_OIS_EIS r y_ois_eis[0..7],","highlight_start":1,"highlight_end":55},{"text":"           0x32 UI_OUTZ_L_G_OIS_EIS r z_ois_eis[8..15], //z axis OIS/EIS","highlight_start":1,"highlight_end":73},{"text":"           0x33 UI_OUTZ_H_G_OIS_EIS r z_ois_eis[0..7],","highlight_start":1,"highlight_end":55},{"text":"           0x34 UI_OUTX_L_A_OIS_DualC r x_ois_dc[8..15], //x axis OIS/DualC","highlight_start":1,"highlight_end":76},{"text":"           0x35 UI_OUTX_H_A_OIS_DualC r x_ois_dc[0..7],","highlight_start":1,"highlight_end":56},{"text":"           0x36 UI_OUTY_L_A_OIS_DualC r y_ois_dc[8..15], //y axis OIS/DualC","highlight_start":1,"highlight_end":76},{"text":"           0x37 UI_OUTY_H_A_OIS_DualC r y_ois_dc[0..7],","highlight_start":1,"highlight_end":56},{"text":"           0x38 UI_OUTZ_L_A_OIS_DualC r z_ois_dc[8..15], //z axis OIS/DualC","highlight_start":1,"highlight_end":76},{"text":"           0x39 UI_OUTZ_H_A_OIS_DualC r z_ois_dc[0..7],","highlight_start":1,"highlight_end":56},{"text":"           0x40 TIMESTAMP0 r timestamp[0..7], //Timestamp output. 1LSB = 21.75u","highlight_start":1,"highlight_end":80},{"text":"           0x41 TIMESTAMP1 r timestamp[8..15],","highlight_start":1,"highlight_end":47},{"text":"           0x42 TIMESTAMP2 r timestamp[16..23],","highlight_start":1,"highlight_end":48},{"text":"           0x43 TIMESTAMP3 r timestamp[24..31],","highlight_start":1,"highlight_end":48},{"text":"           0x44 UI_STATUS_REG_OIS r","highlight_start":1,"highlight_end":36},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                2 gyro_settling, //High when gyro is settling","highlight_start":1,"highlight_end":62},{"text":"                1 gda_ois, //Is gyro OIS data available","highlight_start":1,"highlight_end":56},{"text":"                0 accel_da_ois //Is accel OIS data available","highlight_start":1,"highlight_end":61},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x45 WAKE_UP_SRC r","highlight_start":1,"highlight_end":30},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                6 sleep_change_ia, //Detects change event in activity/inactivity","highlight_start":1,"highlight_end":81},{"text":"                5 wakeup_ff_ia, //Detects free-fall event","highlight_start":1,"highlight_end":58},{"text":"                4 sleep_state, //Sleep status bit","highlight_start":1,"highlight_end":50},{"text":"                3 wu_detect, //wake-up detection status","highlight_start":1,"highlight_end":56},{"text":"                2 x_wu, //wake-up on x-axis","highlight_start":1,"highlight_end":44},{"text":"                1 y_wu, //wake-up on y-axis","highlight_start":1,"highlight_end":44},{"text":"                0 z_wu //wake-up on z-axis","highlight_start":1,"highlight_end":43},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x46 TAP_SRC r","highlight_start":1,"highlight_end":26},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                6 tap_src_ia, //tap event detection status","highlight_start":1,"highlight_end":59},{"text":"                5 single_tap, //single-tap event status","highlight_start":1,"highlight_end":56},{"text":"                4 double_tap, //double-tap event status","highlight_start":1,"highlight_end":56},{"text":"                3 tap_sign, //sign of acceleration detected by tap event","highlight_start":1,"highlight_end":73},{"text":"                2 x_tap, //tap event on x-axis","highlight_start":1,"highlight_end":47},{"text":"                1 y_tap, //tap event on y-axis","highlight_start":1,"highlight_end":47},{"text":"                0 z_tap, //tap event on z-axis","highlight_start":1,"highlight_end":47},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x47 D6D_SRC r","highlight_start":1,"highlight_end":26},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                6 d6d_src_ia, //orientation change interrupt status","highlight_start":1,"highlight_end":68},{"text":"                5 z_high, //z-axis high event","highlight_start":1,"highlight_end":46},{"text":"                4 z_low, //z-axis low event","highlight_start":1,"highlight_end":44},{"text":"                3 y_high, //y-axis high event","highlight_start":1,"highlight_end":46},{"text":"                2 y_low, //y-axis low event","highlight_start":1,"highlight_end":44},{"text":"                1 x_high, //x-axis high event","highlight_start":1,"highlight_end":46},{"text":"                0 x_low //x-axis low event","highlight_start":1,"highlight_end":43},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x49 EMB_FUNC_STATUS_MAINPAGE r","highlight_start":1,"highlight_end":43},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7 is_fsm_lc, //Interrupt status bit for FSM long counter timeout","highlight_start":1,"highlight_end":81},{"text":"                5 is_sigmot, //Interrupt status bit for significant motion detection","highlight_start":1,"highlight_end":85},{"text":"                4 is_tilt, //Interrupt status bit for tilt detection","highlight_start":1,"highlight_end":69},{"text":"                3 is_step_det //Interrupt status bit for step detection","highlight_start":1,"highlight_end":72},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x4A FSM_STATUS_MAINPAGE r","highlight_start":1,"highlight_end":38},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7 is_fsm8, //FSM8 interrupt status","highlight_start":1,"highlight_end":51},{"text":"                6 is_fsm7, //FSM7 interrupt status","highlight_start":1,"highlight_end":51},{"text":"                5 is_fsm6, //FSM6 interrupt status","highlight_start":1,"highlight_end":51},{"text":"                4 is_fsm5, //FSM5 interrupt status","highlight_start":1,"highlight_end":51},{"text":"                3 is_fsm4, //FSM4 interrupt status","highlight_start":1,"highlight_end":51},{"text":"                2 is_fsm3, //FSM3 interrupt status","highlight_start":1,"highlight_end":51},{"text":"                1 is_fsm2, //FSM2 interrupt status","highlight_start":1,"highlight_end":51},{"text":"                0 is_fsm1 //FSM1 interrupt status","highlight_start":1,"highlight_end":50},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x4F INTERNAL_FREQ_FINE r freq_fine, //Difference in percentage of","highlight_start":1,"highlight_end":78},{"text":"                //the effective ODR (and timestamp rate) with respect to the typical.","highlight_start":1,"highlight_end":86},{"text":"                //Step: 0.13%. 8-bit format, two's complement.","highlight_start":1,"highlight_end":63},{"text":"                //See datasheet for more info.","highlight_start":1,"highlight_end":47},{"text":"           0x50 FUNCTIONS_ENABLE rw","highlight_start":1,"highlight_end":36},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7 enable_interrupts, //Enable basic interrupts","highlight_start":1,"highlight_end":63},{"text":"                6 enable_timestamp, //Enable timestamp counter","highlight_start":1,"highlight_end":63},{"text":"                3 dis_res_on_read_all_int, //Disable reset latched on reading","highlight_start":1,"highlight_end":78},{"text":"                    //ALL_INT_SRC","highlight_start":1,"highlight_end":34},{"text":"                1..0 enable_inact //Enables sleep function. Default value: 00","highlight_start":1,"highlight_end":78},{"text":"                    //00: stationary/motion-only interrupts generated,","highlight_start":1,"highlight_end":71},{"text":"                    //accel/gyro configuration do not change.","highlight_start":1,"highlight_end":62},{"text":"                    //01: sets accel to low-power mode 1 with accel ODR selected","highlight_start":1,"highlight_end":81},{"text":"                    //through the XL_INACT_ODR_[1:0] bits of the INACTIVITY_DUR (54h)","highlight_start":1,"highlight_end":86},{"text":"                    //register, gyroscope configuration does not change.","highlight_start":1,"highlight_end":73},{"text":"                    //10: sets accelerometer to low-power mode 1 with accelerometer","highlight_start":1,"highlight_end":84},{"text":"                    //ODR selected through the XL_INACT_ODR_[1:0] bits of the","highlight_start":1,"highlight_end":78},{"text":"                    //INACTIVITY_DUR (54h) register, gyroscope in sleep mode;","highlight_start":1,"highlight_end":78},{"text":"                    //11: sets accelerometer to low-power mode 1 with accelerometer","highlight_start":1,"highlight_end":84},{"text":"                    //ODR selected through the XL_INACT_ODR_[1:0] bits of the","highlight_start":1,"highlight_end":78},{"text":"                    //INACTIVITY_DUR (54h) register, gyroscope in power-down mode","highlight_start":1,"highlight_end":82},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x51 DEN rw","highlight_start":1,"highlight_end":23},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                6 den_lvl, //Enables DEN data level-sensitive trigger mode","highlight_start":1,"highlight_end":75},{"text":"                5 den_lvl_latched, //Enables DEN data level-sensitive latched mode","highlight_start":1,"highlight_end":83},{"text":"                4 den_accel, //Extends DEN to accel","highlight_start":1,"highlight_end":52},{"text":"                3 den_x, //DEN value stored on LSB of x-axis, default yes","highlight_start":1,"highlight_end":74},{"text":"                2 den_y, //DEN value stored on LSB of y-axis, default yes","highlight_start":1,"highlight_end":74},{"text":"                1 den_z, //DEN value stored on LSB of z-axis, default yes","highlight_start":1,"highlight_end":74},{"text":"                0 den_accel_gyro //DEN stamping sensor selection. Default 0.","highlight_start":1,"highlight_end":77},{"text":"                    //0: DEN pin info stamped in the gyroscope axis selected by bits","highlight_start":1,"highlight_end":85},{"text":"                    //DEN_X, DEN_Y, DEN_Z","highlight_start":1,"highlight_end":42},{"text":"                    //1: DEN pin info stamped in the accelerometer axis selected by","highlight_start":1,"highlight_end":84},{"text":"                    //bits DEN_X, DEN_Y, DEN_Z)","highlight_start":1,"highlight_end":48},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x54 INACTIVITY_DUR rw","highlight_start":1,"highlight_end":34},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7 sleep_status_on_int, //Sleep interrupt mode configuration.","highlight_start":1,"highlight_end":77},{"text":"                    //If the INT1_SLEEP_CHANGE or INT2_SLEEP_CHANGE bit is enabled,","highlight_start":1,"highlight_end":84},{"text":"                    //drives the sleep status or sleep change on the INT pin.","highlight_start":1,"highlight_end":78},{"text":"                    //Default value: 0","highlight_start":1,"highlight_end":39},{"text":"                    //0: sleep change notification on INT pin","highlight_start":1,"highlight_end":62},{"text":"                    //1: sleep status reported on INT pin","highlight_start":1,"highlight_end":58},{"text":"                6..4 wu_inact_ths_w,","highlight_start":1,"highlight_end":37},{"text":"                    //Weight of 1 LSB of wake-up (WU_THS) and activity/inactivity","highlight_start":1,"highlight_end":82},{"text":"                    //(INACT_THS) threshold.","highlight_start":1,"highlight_end":45},{"text":"                    //000: 7.8125 mg/LSB (default)","highlight_start":1,"highlight_end":51},{"text":"                    //001: 15.625 mg/LSB;","highlight_start":1,"highlight_end":42},{"text":"                    //010: 31.25 mg/LSB;","highlight_start":1,"highlight_end":41},{"text":"                    //011: 62.5 mg/LSB;","highlight_start":1,"highlight_end":40},{"text":"                    //100: 125 mg/LSB;","highlight_start":1,"highlight_end":39},{"text":"                    //101 - 110 - 111: 250 mg/LSB","highlight_start":1,"highlight_end":50},{"text":"                3..2 accel_inact_odr, //Selects the ODR_XL target during inactivity.","highlight_start":1,"highlight_end":85},{"text":"                    //00: 1.875 Hz;","highlight_start":1,"highlight_end":36},{"text":"                    //01: 15 Hz (default);","highlight_start":1,"highlight_end":43},{"text":"                    //10: 30 Hz;","highlight_start":1,"highlight_end":33},{"text":"                    //11: 60 Hz","highlight_start":1,"highlight_end":32},{"text":"                1..0 inact_dur","highlight_start":1,"highlight_end":31},{"text":"                    //Duration in the transition from stationary to motion","highlight_start":1,"highlight_end":75},{"text":"                    //(from inactivity to activity).","highlight_start":1,"highlight_end":53},{"text":"                    //00: transition to motion (activity) immediately at first","highlight_start":1,"highlight_end":79},{"text":"                    //overthreshold event (default);","highlight_start":1,"highlight_end":53},{"text":"                    //01: transition to motion (activity) after two consecutive","highlight_start":1,"highlight_end":80},{"text":"                    //overthreshold events;","highlight_start":1,"highlight_end":44},{"text":"                    //10: transition to motion (activity) after three consecutive","highlight_start":1,"highlight_end":82},{"text":"                    //overthreshold events;","highlight_start":1,"highlight_end":44},{"text":"                    //11: transition to motion (activity) after four consecutive","highlight_start":1,"highlight_end":81},{"text":"                    //overthreshold events","highlight_start":1,"highlight_end":43},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x55 INACTIVITY_THS rw","highlight_start":1,"highlight_end":34},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                5..0 inact_ths //Activity/inactivity threshold. The resolution of the","highlight_start":1,"highlight_end":86},{"text":"                    //threshold depends on the value of WU_INACT_THS_W_[2:0] in the","highlight_start":1,"highlight_end":84},{"text":"                    //INACTIVITY_DUR (54h) register. Default value: 000000","highlight_start":1,"highlight_end":75},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x56 TAP_CFG0 rw","highlight_start":1,"highlight_end":28},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                6 low_pass_on_6d,","highlight_start":1,"highlight_end":34},{"text":"                    //LPF2 filter on 6D function selection. Refer to Figure 30.","highlight_start":1,"highlight_end":80},{"text":"                    //Default value: 0","highlight_start":1,"highlight_end":39},{"text":"                    //0: ODR/2 low-pass filtered data sent to 6D interrupt function;","highlight_start":1,"highlight_end":85},{"text":"                    //1: LPF2 output data sent to 6D interrupt function","highlight_start":1,"highlight_end":72},{"text":"                5 hw_func_mask_accel_settle,","highlight_start":1,"highlight_end":45},{"text":"                    //Enables masking the execution trigger of the basic interrupt","highlight_start":1,"highlight_end":83},{"text":"                    //functions (6D/4D, free-fall, wake-up, tap, activity/inactivity)","highlight_start":1,"highlight_end":86},{"text":"                    //when accelerometer data are settling. Default value: 0","highlight_start":1,"highlight_end":77},{"text":"                    //Note: Refer to the product application note for the details","highlight_start":1,"highlight_end":82},{"text":"                    //regarding operating/power mode configurations, settings,","highlight_start":1,"highlight_end":79},{"text":"                    //turn-on/off time and on-the-fly changes.","highlight_start":1,"highlight_end":63},{"text":"                4 slope_fds,","highlight_start":1,"highlight_end":29},{"text":"                    //HPF or slope filter selection on wake-up and activity/inactivit","highlight_start":1,"highlight_end":86},{"text":"                    //functions. Refer to Figure 30 (datasheet).","highlight_start":1,"highlight_end":65},{"text":"                3 tap_x_en, //enable x tap recognition","highlight_start":1,"highlight_end":55},{"text":"                2 tap_y_en, //enable y tap recognition","highlight_start":1,"highlight_end":55},{"text":"                1 tap_z_en, //enable z tap recognition","highlight_start":1,"highlight_end":55},{"text":"                0 lir //Latched interrupt","highlight_start":1,"highlight_end":42},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x57 TAP_CFG1 rw","highlight_start":1,"highlight_end":28},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7..5 tap_priority, //Selection of axis priority for tap detection","highlight_start":1,"highlight_end":82},{"text":"                    //input     max     mid     min","highlight_start":1,"highlight_end":52},{"text":"                    //000       x       y       z","highlight_start":1,"highlight_end":50},{"text":"                    //001       y       x       z","highlight_start":1,"highlight_end":50},{"text":"                    //010       x       z       y","highlight_start":1,"highlight_end":50},{"text":"                    //011       z       y       x","highlight_start":1,"highlight_end":50},{"text":"                    //100       x       y       z","highlight_start":1,"highlight_end":50},{"text":"                    //101       y       z       x","highlight_start":1,"highlight_end":50},{"text":"                    //110       z       x       y","highlight_start":1,"highlight_end":50},{"text":"                    //111       z       y       x","highlight_start":1,"highlight_end":50},{"text":"                4..0 tap_ths_x //X-axis tap recognition threshold. Default value: 0","highlight_start":1,"highlight_end":84},{"text":"                    //1 LSB = FS_XL / (2^5)","highlight_start":1,"highlight_end":44},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x58 TAP_CFG2 rw","highlight_start":1,"highlight_end":28},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                4..0 tap_ths_y //like tap_ths_x but y","highlight_start":1,"highlight_end":54},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x59 TAP_THS_6D rw","highlight_start":1,"highlight_end":30},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7 d4d_en, //Enables 4D orientation detection.","highlight_start":1,"highlight_end":62},{"text":"                    //Z-axis position detection is disabled. Default value: 0","highlight_start":1,"highlight_end":78},{"text":"                6..5 sixd_ths, //Threshold for 4D/6D function. Default value: 00","highlight_start":1,"highlight_end":81},{"text":"                    //00: 80�","highlight_start":1,"highlight_end":30},{"text":"                    //01: 70�","highlight_start":1,"highlight_end":30},{"text":"                    //10: 60�","highlight_start":1,"highlight_end":30},{"text":"                    //11: 50�","highlight_start":1,"highlight_end":30},{"text":"                4..0 tap_ths_z //like tap_ths_x but z","highlight_start":1,"highlight_end":54},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x5A TAP_DUR rw","highlight_start":1,"highlight_end":27},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7..4 tap_dur, //","highlight_start":1,"highlight_end":33},{"text":"                    //Duration of maximum time gap for double-tap recognition.","highlight_start":1,"highlight_end":79},{"text":"                    //Default: 0000","highlight_start":1,"highlight_end":36},{"text":"                    //When double-tap recognition is enabled, this register expresses","highlight_start":1,"highlight_end":86},{"text":"                    //the maximum time between two consecutive detected taps to","highlight_start":1,"highlight_end":80},{"text":"                    //determine a double-tap event. The default value of these bits is","highlight_start":1,"highlight_end":87},{"text":"                    //0000b which corresponds to 16/ODR_XL time. If the DUR_[3:0] bits","highlight_start":1,"highlight_end":87},{"text":"                    //are set to a different value, 1LSB corresponds to 32/ODR_XL","highlight_start":1,"highlight_end":82},{"text":"                    //time.","highlight_start":1,"highlight_end":28},{"text":"                3..2 tap_quiet, //","highlight_start":1,"highlight_end":35},{"text":"                    //Expected quiet time after a tap detection. Default value: 00","highlight_start":1,"highlight_end":83},{"text":"                    //Quiet time is the time after the first detected tap in which","highlight_start":1,"highlight_end":83},{"text":"                    //there must not be any overthreshold event. The default value of","highlight_start":1,"highlight_end":86},{"text":"                    //these bits is 00b which corresponds to 2/ODR_XL time. If the","highlight_start":1,"highlight_end":83},{"text":"                    //QUIET_[1:0] bits are set to a different value, 1LSB corresponds","highlight_start":1,"highlight_end":86},{"text":"                    //to 4/ODR_XL time.","highlight_start":1,"highlight_end":40},{"text":"                1..0 tap_shock //","highlight_start":1,"highlight_end":34},{"text":"                    //Maximum duration of overthreshold event. Default value: 00","highlight_start":1,"highlight_end":81},{"text":"                    //Maximum duration is the maximum time of an overthreshold","highlight_start":1,"highlight_end":79},{"text":"                    //signal detection to be recognized as a tap event. The default","highlight_start":1,"highlight_end":84},{"text":"                    //value of these bits is 00b which corresponds to 4/ODR_XL time.","highlight_start":1,"highlight_end":85},{"text":"                    //If the SHOCK_[1:0] bits are set to a different value, 1LSB","highlight_start":1,"highlight_end":81},{"text":"                    //corresponds to 8/ODR_XL time.","highlight_start":1,"highlight_end":52},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x5B WAKE_UP_THS rw","highlight_start":1,"highlight_end":31},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7 single_double_tap, //Enables single/double-tap event. Default 0","highlight_start":1,"highlight_end":82},{"text":"                6 usr_off_on_wu, //","highlight_start":1,"highlight_end":36},{"text":"                    //Drives the low-pass filtered data with user offset correction","highlight_start":1,"highlight_end":84},{"text":"                    //(instead of high-pass filtered data) to the wake-up and the","highlight_start":1,"highlight_end":82},{"text":"                    //activity/inactivity functions. Refer to Figure 30. Default","highlight_start":1,"highlight_end":81},{"text":"                    //value: 0","highlight_start":1,"highlight_end":31},{"text":"                5..0 wk_ths //","highlight_start":1,"highlight_end":31},{"text":"                    //Wake-up threshold. The resolution of the threshold depends on","highlight_start":1,"highlight_end":84},{"text":"                    //the value of WU_INACT_THS_W_[2:0] in the INACTIVITY_DUR (54h)","highlight_start":1,"highlight_end":84},{"text":"                    //register. Default value: 000000","highlight_start":1,"highlight_end":54},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x5C WAKE_UP_DUR rw","highlight_start":1,"highlight_end":31},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7 ff_dur[0], //Free-fall duration event. Default: 0","highlight_start":1,"highlight_end":68},{"text":"                    //For the complete configuration of the free-fall duration, refer","highlight_start":1,"highlight_end":86},{"text":"                    //to FF_DUR_[4:0] in the FREE_FALL (5Dh) configuration.","highlight_start":1,"highlight_end":76},{"text":"                    //1 LSB = 1/ODR_XL time","highlight_start":1,"highlight_end":44},{"text":"                6..5 wake_dur, //Wake-up duration event. Default: 00","highlight_start":1,"highlight_end":69},{"text":"                    //1 LSB = 1/ODR_XL time","highlight_start":1,"highlight_end":44},{"text":"                3..0 sleep_dur //","highlight_start":1,"highlight_end":34},{"text":"                    //Duration to go in sleep mode. Default value:","highlight_start":1,"highlight_end":67},{"text":"                    //0000 (this corresponds to 16 ODR)","highlight_start":1,"highlight_end":56},{"text":"                    //1 LSB = 512/ODR_XL time","highlight_start":1,"highlight_end":46},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x5D FREE_FALL rw","highlight_start":1,"highlight_end":29},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7..3 ff_dur[1..5], //Free-fall duration event. Default: 00000","highlight_start":1,"highlight_end":78},{"text":"                    //For the complete configuration of the free-fall duration, refer","highlight_start":1,"highlight_end":86},{"text":"                    //to FF_DUR_5 in the WAKE_UP_DUR (5Ch) configuration.","highlight_start":1,"highlight_end":74},{"text":"                2..0 ff_ths, //Free-fall threshold setting. Default: 000","highlight_start":1,"highlight_end":73},{"text":"                    //000: 156mg","highlight_start":1,"highlight_end":33},{"text":"                    //001: 219mg","highlight_start":1,"highlight_end":33},{"text":"                    //010: 250mg","highlight_start":1,"highlight_end":33},{"text":"                    //011: 312mg","highlight_start":1,"highlight_end":33},{"text":"                    //100: 344mg","highlight_start":1,"highlight_end":33},{"text":"                    //101: 406mg","highlight_start":1,"highlight_end":33},{"text":"                    //110: 469mg","highlight_start":1,"highlight_end":33},{"text":"                    //111: 500mg","highlight_start":1,"highlight_end":33},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x5E MD1_CFG rw","highlight_start":1,"highlight_end":27},{"text":"               //Functions routing to INT1 pin register (R/W). Each bit in this","highlight_start":1,"highlight_end":80},{"text":"               //register enables a signal to be carried over the INT1 pin. The output","highlight_start":1,"highlight_end":87},{"text":"               //of the pin is the OR combination of the signals selected here and in","highlight_start":1,"highlight_end":86},{"text":"               //the INT1_CTRL (0Dh) register.","highlight_start":1,"highlight_end":47},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7 int1_sleep_change, //","highlight_start":1,"highlight_end":40},{"text":"                    //Routing activity/inactivity recognition event to INT1.","highlight_start":1,"highlight_end":77},{"text":"                    //Default: 0","highlight_start":1,"highlight_end":33},{"text":"                    //(0: routing activity/inactivity event to INT1 disabled;","highlight_start":1,"highlight_end":78},{"text":"                    //1: routing activity/inactivity event to INT1 enabled)","highlight_start":1,"highlight_end":76},{"text":"                6 int1_single_tap, //","highlight_start":1,"highlight_end":38},{"text":"                    //Routing single-tap recognition event to INT1. Default: 0","highlight_start":1,"highlight_end":79},{"text":"                    //(0: routing single-tap event to INT1 disabled;","highlight_start":1,"highlight_end":69},{"text":"                    //1: routing single-tap event to INT1 enabled)","highlight_start":1,"highlight_end":67},{"text":"                5 int1_wu, //","highlight_start":1,"highlight_end":30},{"text":"                    //Routing wake-up event to INT1. Default value: 0","highlight_start":1,"highlight_end":70},{"text":"                    //(0: routing wake-up event to INT1 disabled;","highlight_start":1,"highlight_end":66},{"text":"                    //1: routing wake-up event to INT1 enabled)","highlight_start":1,"highlight_end":64},{"text":"                4 int1_ff, //","highlight_start":1,"highlight_end":30},{"text":"                    //Routing free-fall event to INT1. Default value: 0","highlight_start":1,"highlight_end":72},{"text":"                    //(0: routing free-fall event to INT1 disabled;","highlight_start":1,"highlight_end":68},{"text":"                    //1: routing free-fall event to INT1 enabled)","highlight_start":1,"highlight_end":66},{"text":"                3 int1_double_tap, //","highlight_start":1,"highlight_end":38},{"text":"                    //Routing tap event to INT1. Default value: 0","highlight_start":1,"highlight_end":66},{"text":"                    //(0: routing double-tap event to INT1 disabled;","highlight_start":1,"highlight_end":69},{"text":"                    //1: routing double-tap event to INT1 enabled)","highlight_start":1,"highlight_end":67},{"text":"                2 int1_6d, //","highlight_start":1,"highlight_end":30},{"text":"                    //Routing 6D event to INT1. Default value: 0","highlight_start":1,"highlight_end":65},{"text":"                    //(0: routing 6D event to INT1 disabled;","highlight_start":1,"highlight_end":61},{"text":"                    //1: routing 6D event to INT1 enabled)","highlight_start":1,"highlight_end":59},{"text":"                1 int1_emb, //","highlight_start":1,"highlight_end":31},{"text":"                    //Routing embedded functions event to INT1. Default value: 0","highlight_start":1,"highlight_end":81},{"text":"                    //(0: routing embedded functions event to INT1 disabled;","highlight_start":1,"highlight_end":77},{"text":"                    //1: routing embedded functions event to INT1 enabled)","highlight_start":1,"highlight_end":75},{"text":"                0 int1_shub //","highlight_start":1,"highlight_end":31},{"text":"                    //Routing sensor hub communication concluded event to INT1.","highlight_start":1,"highlight_end":80},{"text":"                    //Default value: 0","highlight_start":1,"highlight_end":39},{"text":"                    //(0: routing sensor hub communication concluded event to","highlight_start":1,"highlight_end":78},{"text":"                    //INT1 disabled;","highlight_start":1,"highlight_end":37},{"text":"                    //1: routing sensor hub communication concluded event to INT1","highlight_start":1,"highlight_end":82},{"text":"                    //enabled)","highlight_start":1,"highlight_end":31},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x5F MD2_CFG rw","highlight_start":1,"highlight_end":27},{"text":"               //Functions routing to INT2 pin register (R/W). Each bit in this","highlight_start":1,"highlight_end":80},{"text":"               //register enables a signal to be carried over the INT2 pin. The output","highlight_start":1,"highlight_end":87},{"text":"               //of the pin is the OR combination of the signals selected here and in","highlight_start":1,"highlight_end":86},{"text":"               //the INT2_CTRL (0Eh) register.","highlight_start":1,"highlight_end":47},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7 int2_sleep_change, //","highlight_start":1,"highlight_end":40},{"text":"                    //Routing activity/inactivity recognition event to INT1.","highlight_start":1,"highlight_end":77},{"text":"                    //Default: 0","highlight_start":1,"highlight_end":33},{"text":"                    //(0: routing activity/inactivity event to INT1 disabled;","highlight_start":1,"highlight_end":78},{"text":"                    //1: routing activity/inactivity event to INT1 enabled)","highlight_start":1,"highlight_end":76},{"text":"                6 int2_single_tap, //","highlight_start":1,"highlight_end":38},{"text":"                    //Routing single-tap recognition event to INT1. Default: 0","highlight_start":1,"highlight_end":79},{"text":"                    //(0: routing single-tap event to INT1 disabled;","highlight_start":1,"highlight_end":69},{"text":"                    //1: routing single-tap event to INT1 enabled)","highlight_start":1,"highlight_end":67},{"text":"                5 int2_wu, //","highlight_start":1,"highlight_end":30},{"text":"                    //Routing wake-up event to INT1. Default value: 0","highlight_start":1,"highlight_end":70},{"text":"                    //(0: routing wake-up event to INT1 disabled;","highlight_start":1,"highlight_end":66},{"text":"                    //1: routing wake-up event to INT1 enabled)","highlight_start":1,"highlight_end":64},{"text":"                4 int2_ff, //","highlight_start":1,"highlight_end":30},{"text":"                    //Routing free-fall event to INT1. Default value: 0","highlight_start":1,"highlight_end":72},{"text":"                    //(0: routing free-fall event to INT1 disabled;","highlight_start":1,"highlight_end":68},{"text":"                    //1: routing free-fall event to INT1 enabled)","highlight_start":1,"highlight_end":66},{"text":"                3 int2_double_tap, //","highlight_start":1,"highlight_end":38},{"text":"                    //Routing tap event to INT1. Default value: 0","highlight_start":1,"highlight_end":66},{"text":"                    //(0: routing double-tap event to INT1 disabled;","highlight_start":1,"highlight_end":69},{"text":"                    //1: routing double-tap event to INT1 enabled)","highlight_start":1,"highlight_end":67},{"text":"                2 int2_6d, //","highlight_start":1,"highlight_end":30},{"text":"                    //Routing 6D event to INT1. Default value: 0","highlight_start":1,"highlight_end":65},{"text":"                    //(0: routing 6D event to INT1 disabled;","highlight_start":1,"highlight_end":61},{"text":"                    //1: routing 6D event to INT1 enabled)","highlight_start":1,"highlight_end":59},{"text":"                1 int2_emb, //","highlight_start":1,"highlight_end":31},{"text":"                    //Routing embedded functions event to INT1. Default value: 0","highlight_start":1,"highlight_end":81},{"text":"                    //(0: routing embedded functions event to INT1 disabled;","highlight_start":1,"highlight_end":77},{"text":"                    //1: routing embedded functions event to INT1 enabled)","highlight_start":1,"highlight_end":75},{"text":"                0 int2_timestamp //","highlight_start":1,"highlight_end":36},{"text":"                    //Enables routing the alert for timestamp overflow within 5.6 ms","highlight_start":1,"highlight_end":85},{"text":"                    //to the INT2 pin.","highlight_start":1,"highlight_end":39},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x62 HAODR_CFG rw","highlight_start":1,"highlight_end":29},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                1..0 haodr_sel //","highlight_start":1,"highlight_end":34},{"text":"                    //Selects the ODR set supported when high-accuracy ODR (HAODR)","highlight_start":1,"highlight_end":83},{"text":"                    //mode is enabled (see Table 19. Accelerometer and gyroscope ODR","highlight_start":1,"highlight_end":85},{"text":"                    //selection in high-accuracy ODR mode). Defauly: 00","highlight_start":1,"highlight_end":72},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x63 EMB_FUNC_CFG rw","highlight_start":1,"highlight_end":32},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7 accel_dualc_batch_from_if, //","highlight_start":1,"highlight_end":48},{"text":"                    //When dual-channel mode is enabled, this bit enables batching","highlight_start":1,"highlight_end":83},{"text":"                    //the accelerometer channel 2 in FIFO. Default value: 0","highlight_start":1,"highlight_end":76},{"text":"                5 emb_func_irq_mask_g_settl, //","highlight_start":1,"highlight_end":48},{"text":"                    //Enables / masks execution trigger of the embedded functions when","highlight_start":1,"highlight_end":87},{"text":"                    //gyroscope data are settling. Default value: 0","highlight_start":1,"highlight_end":68},{"text":"                    //(0: disabled;","highlight_start":1,"highlight_end":36},{"text":"                    //1: masks execution trigger of the embedded functions until","highlight_start":1,"highlight_end":81},{"text":"                    //gyroscope filter settling ends)","highlight_start":1,"highlight_end":54},{"text":"                4 emb_func_irq_mask_accel_settl, //","highlight_start":1,"highlight_end":52},{"text":"                    //Enables / masks execution trigger of the embedded functions","highlight_start":1,"highlight_end":82},{"text":"                    //when accelerometer data are settling. Default value: 0","highlight_start":1,"highlight_end":77},{"text":"                    //(0: disabled;","highlight_start":1,"highlight_end":36},{"text":"                    //1: masks execution trigger of the embedded functions until","highlight_start":1,"highlight_end":81},{"text":"                    //accelerometer filter settling ends)","highlight_start":1,"highlight_end":58},{"text":"                3 emb_func_disable //","highlight_start":1,"highlight_end":38},{"text":"                    //Disables execution of the embedded functions. Default value: 0","highlight_start":1,"highlight_end":85},{"text":"                    //(0: disabled;","highlight_start":1,"highlight_end":36},{"text":"                    //1: embedded functions execution trigger is not generated anymore","highlight_start":1,"highlight_end":87},{"text":"                    //and all initialization procedures are forced when this bit is","highlight_start":1,"highlight_end":84},{"text":"                    //set back to 0).","highlight_start":1,"highlight_end":38},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x64 UI_HANDSHAKE_CTRL rw","highlight_start":1,"highlight_end":37},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                1 ui_shared_ack, //","highlight_start":1,"highlight_end":36},{"text":"                    //Primary interface side. This bit acknowledges the handshake.","highlight_start":1,"highlight_end":83},{"text":"                    //If the secondary interface is not accessing the shared","highlight_start":1,"highlight_end":77},{"text":"                    //registers, this bit is set to 1 by the device and the R/W","highlight_start":1,"highlight_end":80},{"text":"                    //operation on the UI_SPI2_SHARED_0 (65h) through","highlight_start":1,"highlight_end":70},{"text":"                    //UI_SPI2_SHARED_5 (6Ah) registers is allowed on the primary","highlight_start":1,"highlight_end":81},{"text":"                    //interface.","highlight_start":1,"highlight_end":33},{"text":"                0 ui_shared_req //","highlight_start":1,"highlight_end":35},{"text":"                    //This bit is used by the primary interface master to request","highlight_start":1,"highlight_end":82},{"text":"                    //access to the UI_SPI2_SHARED_0 (65h) through UI_SPI2_SHARED_5","highlight_start":1,"highlight_end":84},{"text":"                    //(6Ah) registers. When the R/W operation is finished, the master","highlight_start":1,"highlight_end":86},{"text":"                    //must reset this bit.","highlight_start":1,"highlight_end":43},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x65 UI_SPI2_SHARED_0 rw ui_spi2_shared_0, //UI/SPI2 shared registers","highlight_start":1,"highlight_end":81},{"text":"           0x66 UI_SPI2_SHARED_1 rw ui_spi2_shared_1,","highlight_start":1,"highlight_end":54},{"text":"           0x67 UI_SPI2_SHARED_2 rw ui_spi2_shared_2,","highlight_start":1,"highlight_end":54},{"text":"           0x68 UI_SPI2_SHARED_3 rw ui_spi2_shared_3,","highlight_start":1,"highlight_end":54},{"text":"           0x69 UI_SPI2_SHARED_4 rw ui_spi2_shared_4,","highlight_start":1,"highlight_end":54},{"text":"           0x6A UI_SPI2_SHARED_5 rw ui_spi2_shared_5,","highlight_start":1,"highlight_end":54},{"text":"                //Volatile byte is used as a contact point between the primary and","highlight_start":1,"highlight_end":83},{"text":"                //secondary interface host. These shared registers are accessible only","highlight_start":1,"highlight_end":87},{"text":"                //by one interface at a time and access is managed through the","highlight_start":1,"highlight_end":79},{"text":"                //UI_SHARED_ACK and UI_SHARED_REQ bits of register UI_HANDSHAKE_CTRL","highlight_start":1,"highlight_end":85},{"text":"                //(64h) and the SPI2_SHARED_ACK and SPI2_SHARED_REQ bits of register","highlight_start":1,"highlight_end":85},{"text":"                //SPI2_HANDSHAKE_CTRL (6Eh).","highlight_start":1,"highlight_end":45},{"text":"           0x6B CTRL_EIS rw","highlight_start":1,"highlight_end":28},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7..6 odr_gyro_eis, //","highlight_start":1,"highlight_end":38},{"text":"                    //Enables and selects the ODR of the gyroscope EIS channel.","highlight_start":1,"highlight_end":80},{"text":"                    //(00: EIS channel is off (default);","highlight_start":1,"highlight_end":57},{"text":"                    //01: 1.92 kHz;","highlight_start":1,"highlight_end":36},{"text":"                    //10: 960 Hz;","highlight_start":1,"highlight_end":34},{"text":"                    //11: reserved)","highlight_start":1,"highlight_end":36},{"text":"                4 lpg_gyro_eis_bw, //","highlight_start":1,"highlight_end":38},{"text":"                    //Gyroscope digital LPF_EIS filter bandwidth selection.","highlight_start":1,"highlight_end":76},{"text":"                    //Refer to Table 191 (datasheet).","highlight_start":1,"highlight_end":54},{"text":"                3 gyro_eis_on_gyro_ois_out, //","highlight_start":1,"highlight_end":47},{"text":"                    //Enables routing gyroscope EIS output to OIS from UI output","highlight_start":1,"highlight_end":81},{"text":"                    //addresses (2Eh – 33h). When this bit is set to 1, the","highlight_start":1,"highlight_end":76},{"text":"                    //gyroscope OIS data cannot be read from primary interface.","highlight_start":1,"highlight_end":80},{"text":"                    //Default value: 0","highlight_start":1,"highlight_end":39},{"text":"                2..0 fs_gyro_eis //","highlight_start":1,"highlight_end":36},{"text":"                    //Gyroscope full-scale selection for EIS channel. If the","highlight_start":1,"highlight_end":77},{"text":"                    //FS_G_[3:0] bits in CTRL6 (15h) are equal to 1100 (±4000 dps)","highlight_start":1,"highlight_end":83},{"text":"                    //FS_G_EIS_[2:0] must be set to \"100\" in order to have","highlight_start":1,"highlight_end":75},{"text":"                    //±4000 dpsfull scale on both UI and EIS channels. If the","highlight_start":1,"highlight_end":78},{"text":"                    //FS_G_3 bit in register CTRL6 (15h) is equal to 0, the EIS","highlight_start":1,"highlight_end":80},{"text":"                    //channel full scale can be selected as follows:","highlight_start":1,"highlight_end":69},{"text":"                    //(000: ±125 dps (default);","highlight_start":1,"highlight_end":48},{"text":"                    //001: ±250 dps;","highlight_start":1,"highlight_end":37},{"text":"                    //010: ±500 dps;","highlight_start":1,"highlight_end":37},{"text":"                    //011: ±1000 dps;","highlight_start":1,"highlight_end":38},{"text":"                    //100: ±2000 dps;","highlight_start":1,"highlight_end":38},{"text":"                    //others: reserved)","highlight_start":1,"highlight_end":40},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x6F UI_INT_OIS rw","highlight_start":1,"highlight_end":30},{"text":"               //OIS interrupt configuration register","highlight_start":1,"highlight_end":54},{"text":"               //The primary interface can write to this register when the","highlight_start":1,"highlight_end":75},{"text":"               //OIS_CTRL_FROM_UI bit in the FUNC_CFG_ACCESS (01h) register is equal","highlight_start":1,"highlight_end":85},{"text":"               //to 1 (primary IF full-control mode); this register is read-only","highlight_start":1,"highlight_end":81},{"text":"               //when the OIS_CTRL_FROM_UI bit is equal to 0 (SPI2 full-control mode)","highlight_start":1,"highlight_end":86},{"text":"               //and shows the content of the SPI2_INT_OIS (6Fh) register.","highlight_start":1,"highlight_end":75},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7 int2_drdy_ois, //","highlight_start":1,"highlight_end":36},{"text":"                    //Enables OIS chain DRDY on INT2 pin from the UI interface.","highlight_start":1,"highlight_end":80},{"text":"                    //This setting has priority over all other INT2 settings.","highlight_start":1,"highlight_end":78},{"text":"                6 drdy_mask_ois, //","highlight_start":1,"highlight_end":36},{"text":"                    //Enables / masks OIS data available. Default value: 0","highlight_start":1,"highlight_end":75},{"text":"                    //(0: disabled;","highlight_start":1,"highlight_end":36},{"text":"                    //1: masks OIS DRDY signals (both accelerometer and gyroscope)","highlight_start":1,"highlight_end":83},{"text":"                    //until filter settling ends (accelerometer and gyroscope","highlight_start":1,"highlight_end":78},{"text":"                    //independently masked))","highlight_start":1,"highlight_end":45},{"text":"                4 st_ois_clampdis //","highlight_start":1,"highlight_end":37},{"text":"                    //Disables OIS chain clamp during self-test. Default value: 0","highlight_start":1,"highlight_end":82},{"text":"                    //(0: All OIS chain outputs = 8000h during self-test;","highlight_start":1,"highlight_end":74},{"text":"                    //1: OIS chain self-test outputs)","highlight_start":1,"highlight_end":54},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x70 UI_CTRL1_OIS r","highlight_start":1,"highlight_end":31},{"text":"               //OIS configuration register","highlight_start":1,"highlight_end":44},{"text":"               //The primary interface can write this register when the","highlight_start":1,"highlight_end":72},{"text":"               //OIS_CTRL_FROM_UI bit in the FUNC_CFG_ACCESS (01h) register is equal","highlight_start":1,"highlight_end":85},{"text":"               //to 1 (primary IF full-control mode); this register is read-only","highlight_start":1,"highlight_end":81},{"text":"               //when the OIS_CTRL_FROM_UI bit is equal to 0 (SPI2 full-control mode)","highlight_start":1,"highlight_end":86},{"text":"               //and shows the content of the SPI2_CTRL1_OIS (70h) register.","highlight_start":1,"highlight_end":77},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                5 sim_ois, //SPI2 3- or 4-wire interface. Default value: 0","highlight_start":1,"highlight_end":75},{"text":"                2 ois_accel_en, //Enables accelerometer OIS chain. Default value: 0","highlight_start":1,"highlight_end":84},{"text":"                1 ois_gyro_en, //Enables gyroscope OIS chain. Default value: 0","highlight_start":1,"highlight_end":79},{"text":"                0 spi2_read_en //In primary IF full-control mode, enables auxiliary","highlight_start":1,"highlight_end":84},{"text":"                    //SPI for reading OIS data in registers SPI2_OUTX_L_G_OIS (22h)","highlight_start":1,"highlight_end":84},{"text":"                    //and SPI2_OUTX_H_G_OIS (23h) through Section 11.9","highlight_start":1,"highlight_end":71},{"text":"                    //SPI2_OUTZ_L_A_OIS (2Ch) and SPI2_OUTZ_H_A_OIS (2Dh).","highlight_start":1,"highlight_end":75},{"text":"                    //Default value: 0","highlight_start":1,"highlight_end":39},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x71 UI_CTRL2_OIS r //read-only in SPI2 mode b/c redundant, but I'm not","highlight_start":1,"highlight_end":83},{"text":"               //sure which mode we're running this in.","highlight_start":1,"highlight_end":56},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                4..3 lpf1_gyro_ois_bw, //Gyroscope OIS bandwidth selection.","highlight_start":1,"highlight_end":76},{"text":"                    //Value     Cutoff(Hz)      Phase @20Hz(�)","highlight_start":1,"highlight_end":63},{"text":"                    //00        293             -7.1","highlight_start":1,"highlight_end":53},{"text":"                    //01        217             -9.1","highlight_start":1,"highlight_end":53},{"text":"                    //10        158             -11.9","highlight_start":1,"highlight_end":54},{"text":"                    //11        476             -5.1","highlight_start":1,"highlight_end":53},{"text":"                2..0 fs_gyro_ois //Gyro OIS full-scale selection.","highlight_start":1,"highlight_end":66},{"text":"                    //000: ±125 dps","highlight_start":1,"highlight_end":36},{"text":"                    //001: ±250 dps","highlight_start":1,"highlight_end":36},{"text":"                    //010: ±500 dps","highlight_start":1,"highlight_end":36},{"text":"                    //011: ±1000 dps","highlight_start":1,"highlight_end":37},{"text":"                    //100: ±2000 dps","highlight_start":1,"highlight_end":37},{"text":"                    //Others reserved","highlight_start":1,"highlight_end":38},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x72 UI_CTRL3_OIS r","highlight_start":1,"highlight_end":31},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                5..3 lpf_accel_ois_bw, //Selects accel OIS channel bandwidth,","highlight_start":1,"highlight_end":78},{"text":"                    //Default value 0.","highlight_start":1,"highlight_end":39},{"text":"                    //Value     Typ. Overall BW (Hz)    Typ. Overall Phase @20Hz(�)","highlight_start":1,"highlight_end":84},{"text":"                    //000       749                     -3.41    ","highlight_start":1,"highlight_end":66},{"text":"                    //001       539                     -4.04","highlight_start":1,"highlight_end":62},{"text":"                    //010       342                     -5.31","highlight_start":1,"highlight_end":62},{"text":"                    //011       162                     -9.08","highlight_start":1,"highlight_end":62},{"text":"                    //100       78.5                    -16.4","highlight_start":1,"highlight_end":62},{"text":"                    //101       38.6                    -29.6","highlight_start":1,"highlight_end":62},{"text":"                    //110       19.3                    -28.8","highlight_start":1,"highlight_end":62},{"text":"                    //111       9.8                     -29.1","highlight_start":1,"highlight_end":62},{"text":"                    //Default 0.","highlight_start":1,"highlight_end":33},{"text":"                1..0 fs_accel_ois //Selects accel OIS channel full-scale.","highlight_start":1,"highlight_end":74},{"text":"                    //00: ±2 g default)","highlight_start":1,"highlight_end":40},{"text":"                    //01: ±4g","highlight_start":1,"highlight_end":30},{"text":"                    //10: ±8 ","highlight_start":1,"highlight_end":30},{"text":"                    //11: ±16 ","highlight_start":1,"highlight_end":31},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x73 X_OFS_USR rw usr_offset_x,","highlight_start":1,"highlight_end":43},{"text":"           0x74 Y_OFS_USR rw usr_offset_y,","highlight_start":1,"highlight_end":43},{"text":"           0x75 Z_OFS_USR rw usr_offset_z,","highlight_start":1,"highlight_end":43},{"text":"           0x78 FIFO_DATA_OUT_TAG r","highlight_start":1,"highlight_end":36},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7..3 tag_sensor, //FIFO tag. Identifies sensor used for FIFO data.","highlight_start":1,"highlight_end":83},{"text":"                    //Value     Sensor","highlight_start":1,"highlight_end":39},{"text":"                    //0x00      FIFO empty","highlight_start":1,"highlight_end":43},{"text":"                    //0x01      Gyroscope NC","highlight_start":1,"highlight_end":45},{"text":"                    //0x02      Accelerometer NC","highlight_start":1,"highlight_end":49},{"text":"                    //0x03      Temperature","highlight_start":1,"highlight_end":44},{"text":"                    //0x04      Timestamp","highlight_start":1,"highlight_end":42},{"text":"                    //0x05      CFG_Change","highlight_start":1,"highlight_end":43},{"text":"                    //0x06      Accelerometer NC_T_2","highlight_start":1,"highlight_end":53},{"text":"                    //0x07      Accelerometer NC_T_1","highlight_start":1,"highlight_end":53},{"text":"                    //0x08      Accelerometer 2xC","highlight_start":1,"highlight_end":50},{"text":"                    //0x09      Accelerometer 3xC","highlight_start":1,"highlight_end":50},{"text":"                    //0x0A      Gyroscope NC_T_2","highlight_start":1,"highlight_end":49},{"text":"                    //0x0B      Gyroscope NC_T_1","highlight_start":1,"highlight_end":49},{"text":"                    //0x0C      Gyroscope 2xC","highlight_start":1,"highlight_end":46},{"text":"                    //0x0D      Gyroscope 3xC","highlight_start":1,"highlight_end":46},{"text":"                    //0x0E      Sensor hub slave 0","highlight_start":1,"highlight_end":51},{"text":"                    //0x0F      Sensor hub slave 1","highlight_start":1,"highlight_end":51},{"text":"                    //0x10      Sensor hub slave 2","highlight_start":1,"highlight_end":51},{"text":"                    //0x11      Sensor hub slave 3","highlight_start":1,"highlight_end":51},{"text":"                    //0x12      Step counter","highlight_start":1,"highlight_end":45},{"text":"                    //0x13      SFLP game rotation vector","highlight_start":1,"highlight_end":58},{"text":"                    //0x16      SFLP gyroscope bias","highlight_start":1,"highlight_end":52},{"text":"                    //0x17      SFLP gravity vector","highlight_start":1,"highlight_end":52},{"text":"                    //0x19      Sensor hub nack","highlight_start":1,"highlight_end":48},{"text":"                    //0x1D      Accelerometer dualC","highlight_start":1,"highlight_end":52},{"text":"                    //0x1E      Enhanced EIS gyroscope","highlight_start":1,"highlight_end":55},{"text":"                    //Others reserved","highlight_start":1,"highlight_end":38},{"text":"                2..1 tag_counter //2-bit counter which identifies sensor time slot","highlight_start":1,"highlight_end":83},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"dev_csr!","def_site_span":{"file_name":"/Users/BrianL/Documents/GitHub/dev-csr/dev-csr-macro/src/lib.rs","byte_start":830,"byte_end":879,"line_start":39,"line_end":39,"column_start":1,"column_end":50,"is_primary":false,"text":[{"text":"pub fn dev_csr(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/lib.rs","byte_start":45860,"byte_end":45871,"line_start":882,"line_end":882,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"impl <S: SpiHandle> ReadLsm6dsv for Lsm6dsv<S> {","highlight_start":21,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a trait with a similar name exists","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":45860,"byte_end":45871,"line_start":882,"line_end":882,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"impl <S: SpiHandle> ReadLsm6dsv for Lsm6dsv<S> {","highlight_start":21,"highlight_end":32}],"label":null,"suggested_replacement":"ReadLsm6dso","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ReadLsm6dsv` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:882:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mdev_csr! {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named trait `ReadLsm6dso` defined here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m882\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl <S: SpiHandle> ReadLsm6dsv for Lsm6dsv<S> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a trait with a similar name exists: `ReadLsm6dso`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find trait `WriteLsm6dsv` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":222,"byte_end":230,"line_start":12,"line_end":12,"column_start":1,"column_end":9,"is_primary":false,"text":[{"text":"dev_csr! {","highlight_start":1,"highlight_end":9}],"label":"similarly named trait `WriteLsm6dso` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":222,"byte_end":45317,"line_start":12,"line_end":855,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"dev_csr! {","highlight_start":1,"highlight_end":11},{"text":"    dev Lsm6dso{","highlight_start":1,"highlight_end":17},{"text":"        regs{","highlight_start":1,"highlight_end":14},{"text":"           0x01 FUNC_CFG_ACCESS rw //enables access to some embedded functions registers","highlight_start":1,"highlight_end":89},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7 emb_func, //embedded functions config register access, default 0","highlight_start":1,"highlight_end":83},{"text":"                6 shub_reg, //sensor hub config reg access, default 0","highlight_start":1,"highlight_end":70},{"text":"                3 fsm_wr_ctrl, //let FSM control the CTRL registers, default 0","highlight_start":1,"highlight_end":79},{"text":"                2 global_reset, //global reset of the device, default 0","highlight_start":1,"highlight_end":72},{"text":"                1 spi2_reset, //pulse 1 to reset the control registers of SPI2, default 0","highlight_start":1,"highlight_end":90},{"text":"                0 ois_from_ui, //Enables control of OIS config from main UI, default 0","highlight_start":1,"highlight_end":87},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x02 PIN_CTRL rw //Pull-up control register for SDO, OCS-Aux, and SDO_Aux pins","highlight_start":1,"highlight_end":90},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7 ois_pullup_L, //1 disables pull-up on OCS_Aux and SDO_Aux pins, 0 enables, default 0","highlight_start":1,"highlight_end":103},{"text":"                6 sdo_pullup, //Enables pull-up on SDO pin, default 0","highlight_start":1,"highlight_end":70},{"text":"                5 post_reset_action, //0: config reset (SW reset + dyn addr reset), 1: global reset (POR reset)","highlight_start":1,"highlight_end":112},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x03 IF_CFG rw","highlight_start":1,"highlight_end":26},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7 sda_pullup, //Enable pull-up on SDA pin, default 0","highlight_start":1,"highlight_end":69},{"text":"                6 i2c_aux_pullup, //1: enable internal pull-up on aux I2C line","highlight_start":1,"highlight_end":79},{"text":"                5 anti_spike_filter, //1: anti-spike on SCL and SDA always on, 0: filter managed by protocol","highlight_start":1,"highlight_end":109},{"text":"                4 interrupt_active, //0: active high interrupt, 1: active low interrupt, default 0","highlight_start":1,"highlight_end":99},{"text":"                3 pp_od, //Push-pull/open-drain selection on INT1 and INT2 pins. Default value: 0 (0: push-pull mode; 1: open-drain mode)","highlight_start":1,"highlight_end":138},{"text":"                2 spi_mode_select, //0: 4-wire interface, 1: 3-wire interface, default 0","highlight_start":1,"highlight_end":89},{"text":"                0 i2c_disable, //0: i2c and i3c enabled, 1: disabled, default 0","highlight_start":1,"highlight_end":80},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x06 ODR_TRIG_CFG rw odr_data_amount, //ODR-triggered mode configuration register (R/W), determines amount of data generated during ref period in ODR-triggered mode. Allowed vals: 0, 4-255","highlight_start":1,"highlight_end":200},{"text":"           0x07 FIFO_CTRL1 rw fifo_wtm, //FIFO watermark threshold, 1 LSB = TAG (1 byte) + 1 sensor (6 bytes) in FIFO, flag rises when #bytes in FIFO > threshold","highlight_start":1,"highlight_end":162},{"text":"           0x08 FIFO_CTRL2 rw","highlight_start":1,"highlight_end":30},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7 stop_fifo_on_wtm, //Limit FIFO depth to threshold level","highlight_start":1,"highlight_end":74},{"text":"                6 fifo_compr, //Enable compression","highlight_start":1,"highlight_end":51},{"text":"                4 fifo_batch_odrchg, //Batch ODR nCHANGE sensor in FIFO","highlight_start":1,"highlight_end":72},{"text":"                2..1 fifo_uncompr_rate, //Configures the rate of written uncompressed data (default 0). 0: do not force uncompressed data writing, 1: uncompressed data every 8 batch, 2: every 16 batch, 3: every 32 batch","highlight_start":1,"highlight_end":220},{"text":"                0 fifo_dualc_fsm //Enable FSM-triggered batching of channel 2 when available, 0 disabled, 1 enabled, default 0","highlight_start":1,"highlight_end":127},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x09 FIFO_CTRL3 rw","highlight_start":1,"highlight_end":30},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7..4 fifo_gyro_bdr, //Select batch data rate for gyro data. 0000: gyro not batched, 0001: 1.875Hz, otherwise rate = 1.875*2^{input}, max input 1100","highlight_start":1,"highlight_end":164},{"text":"                3..0 fifo_accel_bdr //Select batch data rate for accelerometer. Same as gyro.","highlight_start":1,"highlight_end":94},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x0A FIFO_CTRL4 rw","highlight_start":1,"highlight_end":30},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7..6 fifo_ts_decim, //Select decimation for timestamp batching. 00: timestamp not batched. 01: write rate = max(fifo_accel_bdr, fifo_gyro_bdr). 10: write rate = max(fifo_accel_bdr, fifo_gyro_bdr)/8.  11: write rate = max(fifo_accel_bdr, fifo_gyro_bdr)/32.","highlight_start":1,"highlight_end":272},{"text":"                5..4 fifo_temp_bdr, //Select batch data rate for temperature. 00: not batched. 01: 1.875Hz. 10: 15Hz. 11: 60Hz.","highlight_start":1,"highlight_end":128},{"text":"                3 fifo_gyro_eis, //Enable gyroscope EIS value batching, 0 disabled, 1 enabled, default 0.","highlight_start":1,"highlight_end":106},{"text":"                2..0 fifo_mode //Mode selection.","highlight_start":1,"highlight_end":49},{"text":"                    //000: FIFO disabled.","highlight_start":1,"highlight_end":42},{"text":"                    //001: FIFO mode: stop collection when FIFO is full.","highlight_start":1,"highlight_end":73},{"text":"                    //010: continuousWTM-to-full mode: cont. mode with wtm until","highlight_start":1,"highlight_end":81},{"text":"                    //trigger is deasserted, then FIFO mode,","highlight_start":1,"highlight_end":61},{"text":"                    //011: continuous-to-FIFO mode: continuous until trigger is","highlight_start":1,"highlight_end":80},{"text":"                    //deasserted, then FIFO mode.","highlight_start":1,"highlight_end":50},{"text":"                    //100: bypass-to-continuous mode: FIFO disabled until trigger","highlight_start":1,"highlight_end":82},{"text":"                    //is deasserted, then continuous mode.","highlight_start":1,"highlight_end":59},{"text":"                    //101: reserved.","highlight_start":1,"highlight_end":37},{"text":"                    //110: continuous mode: if FIFO is full, new samples overwrite","highlight_start":1,"highlight_end":83},{"text":"                    //old ones.","highlight_start":1,"highlight_end":32},{"text":"                    //111: bypass-to-FIFO mode: FIFO disabled until trigger is","highlight_start":1,"highlight_end":79},{"text":"                    //deasserted, then FIFO mode.","highlight_start":1,"highlight_end":50},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x0B COUNTER_BDR_REG1 rw","highlight_start":1,"highlight_end":36},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                6..5 trig_ctr_bdr, //Select the trigger for the internal counter of batch events for the accel, gyro, and EIS gyro.","highlight_start":1,"highlight_end":132},{"text":"                    //00: accel batch event.","highlight_start":1,"highlight_end":45},{"text":"                    //01: gyro batch event.","highlight_start":1,"highlight_end":44},{"text":"                    //10-11: gyro EIS batch event.","highlight_start":1,"highlight_end":51},{"text":"                1..0 batch_counter_thresh[0..1] //Sets the threshold for the internal","highlight_start":1,"highlight_end":86},{"text":"                    //counter of batch events. When this counter reaches the","highlight_start":1,"highlight_end":77},{"text":"                    //threshold, the counter is reset and counter_bdr_reached is","highlight_start":1,"highlight_end":81},{"text":"                    //set to 1.","highlight_start":1,"highlight_end":32},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x0C COUNTER_BDR_REG2 rw batch_counter_thresh[2..9],","highlight_start":1,"highlight_end":64},{"text":"           0x0D INT1_CTRL rw //INT1 pin control register.","highlight_start":1,"highlight_end":58},{"text":"               //Output is the OR combination of all selected here and in MD1_CFG.","highlight_start":1,"highlight_end":83},{"text":"               //All bits default 0.","highlight_start":1,"highlight_end":37},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                6 int1_cnt_bdr, //Enables COUNTER_BDR_IA interrupt on INT1 pin.","highlight_start":1,"highlight_end":80},{"text":"                5 int1_fifo_full, //Enables FIFO full flag interrupt on INT1 pin.","highlight_start":1,"highlight_end":82},{"text":"                4 int1_fifo_over, //Enables FIFO overrun interrupt on INT1 pin.","highlight_start":1,"highlight_end":80},{"text":"                3 int1_fifo_thresh, //Enables FIFO threshold interrupt on INT1 pin.","highlight_start":1,"highlight_end":84},{"text":"                1 int1_gyro_rdy, //Enables gyro data-ready interrupt on INT1 pin.","highlight_start":1,"highlight_end":82},{"text":"                0 int1_accel_rdy //Enables accel data-ready interrupt on INT1 pin.","highlight_start":1,"highlight_end":83},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x0E INT2_CTRL rw //INT2 pin control register.","highlight_start":1,"highlight_end":58},{"text":"               //Output is the OR combination of all selected here and in MD2_CFG.","highlight_start":1,"highlight_end":83},{"text":"               //All defaults 0.","highlight_start":1,"highlight_end":33},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7 int2_endop, //Enables routing the embedded-func ENDOP signal to","highlight_start":1,"highlight_end":82},{"text":"                    //the INT2 pin.","highlight_start":1,"highlight_end":36},{"text":"                6 int2_cnt_bdr, //Enables COUNTER_BDR_IA interrupt on INT2 pin.","highlight_start":1,"highlight_end":80},{"text":"                5 int2_fifo_full, //Enables FIFO full interrupt on INT2 pin.","highlight_start":1,"highlight_end":77},{"text":"                4 int2_fifo_over, //Enables FIFO overrun interrupt on INT2 pin.","highlight_start":1,"highlight_end":80},{"text":"                3 int2_fifo_thresh, //Enables FIFO threshold interrupt on INT2 pin.","highlight_start":1,"highlight_end":84},{"text":"                2 int2_eis_rdy, //Enables gyro EIS data-ready interrupt on INT2 pin.","highlight_start":1,"highlight_end":85},{"text":"                1 int2_gyro_rdy, //Enables gyro data-ready interrupt on INT2 pin.","highlight_start":1,"highlight_end":82},{"text":"                0 int2_accel_rdy //Enables accel data-ready interrupt on INT2 pin.","highlight_start":1,"highlight_end":83},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x0F WHO_AM_I r whoami, //whoami value. Read-only, fixed at 0x70.","highlight_start":1,"highlight_end":77},{"text":"           0x10 CTRL1 rw","highlight_start":1,"highlight_end":25},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                6..4 accel_mode, //Accel op mode selection.","highlight_start":1,"highlight_end":60},{"text":"                    //000: high-performance mode (default).","highlight_start":1,"highlight_end":60},{"text":"                    //001: high-accuracy ODR mode.","highlight_start":1,"highlight_end":51},{"text":"                    //010: reserved.","highlight_start":1,"highlight_end":37},{"text":"                    //011: ODR-triggered mode.","highlight_start":1,"highlight_end":47},{"text":"                    //100: low-power mode 1 (2 mean).","highlight_start":1,"highlight_end":54},{"text":"                    //101: low-power mode 2 (4 mean).","highlight_start":1,"highlight_end":54},{"text":"                    //110: low-power mode 3 (8 mean).","highlight_start":1,"highlight_end":54},{"text":"                    //111: normal mode.","highlight_start":1,"highlight_end":40},{"text":"                3..0 accel_odr //Accel ODR selection.","highlight_start":1,"highlight_end":54},{"text":"                    //0000: power down (default)","highlight_start":1,"highlight_end":49},{"text":"                    //0001: 1.875Hz (low power)","highlight_start":1,"highlight_end":48},{"text":"                    //0010: 7.5Hz (high-performance, normal)","highlight_start":1,"highlight_end":61},{"text":"                    //0011: 15Hz (LP, HP, normal)","highlight_start":1,"highlight_end":50},{"text":"                    //0100: 30Hz (LP, HP, normal)","highlight_start":1,"highlight_end":50},{"text":"                    //0101: 60Hz (LP, HP, normal)","highlight_start":1,"highlight_end":50},{"text":"                    //0110: 120Hz (LP, HP, normal)","highlight_start":1,"highlight_end":51},{"text":"                    //0111: 240Hz (LP, HP, normal)","highlight_start":1,"highlight_end":51},{"text":"                    //1000: 480Hz (HP, normal)","highlight_start":1,"highlight_end":47},{"text":"                    //1001: 960Hz (HP, normal)","highlight_start":1,"highlight_end":47},{"text":"                    //1010: 1.92kHz (HP, normal)","highlight_start":1,"highlight_end":49},{"text":"                    //1011: 3.84kHz (HP)","highlight_start":1,"highlight_end":41},{"text":"                    //1100: 7.68kHz (HP)","highlight_start":1,"highlight_end":41},{"text":"                    //others: reserved","highlight_start":1,"highlight_end":39},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x11 CTRL2 rw","highlight_start":1,"highlight_end":25},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                6..4 gyro_mode, //Gyro op mode select.","highlight_start":1,"highlight_end":55},{"text":"                    //000: high-performance (default)","highlight_start":1,"highlight_end":54},{"text":"                    //001: high-accuracy ODR","highlight_start":1,"highlight_end":45},{"text":"                    //010: reserved","highlight_start":1,"highlight_end":36},{"text":"                    //011: ODR-triggered","highlight_start":1,"highlight_end":41},{"text":"                    //100: sleep","highlight_start":1,"highlight_end":33},{"text":"                    //101: low-power","highlight_start":1,"highlight_end":37},{"text":"                    //110-111: reserved","highlight_start":1,"highlight_end":40},{"text":"                3..0 gyro_odr //Accel ODR selection.","highlight_start":1,"highlight_end":53},{"text":"                    //0000: power down (default)","highlight_start":1,"highlight_end":49},{"text":"                    //0010: 7.5Hz (high-performance, normal)","highlight_start":1,"highlight_end":61},{"text":"                    //0011: 15Hz (LP, HP, normal)","highlight_start":1,"highlight_end":50},{"text":"                    //0100: 30Hz (LP, HP, normal)","highlight_start":1,"highlight_end":50},{"text":"                    //0101: 60Hz (LP, HP, normal)","highlight_start":1,"highlight_end":50},{"text":"                    //0110: 120Hz (LP, HP, normal)","highlight_start":1,"highlight_end":51},{"text":"                    //0111: 240Hz (LP, HP, normal)","highlight_start":1,"highlight_end":51},{"text":"                    //1000: 480Hz (HP, normal)","highlight_start":1,"highlight_end":47},{"text":"                    //1001: 960Hz (HP, normal)","highlight_start":1,"highlight_end":47},{"text":"                    //1010: 1.92kHz (HP, normal)","highlight_start":1,"highlight_end":49},{"text":"                    //1011: 3.84kHz (HP)","highlight_start":1,"highlight_end":41},{"text":"                    //1100: 7.68kHz (HP)","highlight_start":1,"highlight_end":41},{"text":"                    //others: reserved","highlight_start":1,"highlight_end":39},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x12 CTRL3 rw","highlight_start":1,"highlight_end":25},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7 mem_reset, //Resets memory content. Automatically clears.","highlight_start":1,"highlight_end":76},{"text":"                6 block_upd, //Block data update.","highlight_start":1,"highlight_end":50},{"text":"                    //0: continuous update","highlight_start":1,"highlight_end":43},{"text":"                    //1: output registers are not updated until LSB or MSB have been","highlight_start":1,"highlight_end":85},{"text":"                    //read.","highlight_start":1,"highlight_end":28},{"text":"                    //default: 1","highlight_start":1,"highlight_end":33},{"text":"                2 auto_inc, //Auto-increment addresses during multiple-byte serial","highlight_start":1,"highlight_end":83},{"text":"                    //access. Default 1.","highlight_start":1,"highlight_end":41},{"text":"                    //0: disabled, 1: enabled.","highlight_start":1,"highlight_end":47},{"text":"                0 sw_reset //Software reset, resets all control registers.","highlight_start":1,"highlight_end":75},{"text":"                    //Automatically cleared. Default 0.","highlight_start":1,"highlight_end":56},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x13 CTRL4 rw","highlight_start":1,"highlight_end":25},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                4 int2_on_int1, //OR INT2 output onto INT1 output","highlight_start":1,"highlight_end":66},{"text":"                3 mask_rdy, //Mask data-ready signal, default 0 (disabled),","highlight_start":1,"highlight_end":76},{"text":"                    //until filter setting ends.","highlight_start":1,"highlight_end":49},{"text":"                2 int2_temp_dry, //Enable temperature sensor data-ready interrupt","highlight_start":1,"highlight_end":82},{"text":"                    //on INT2 pin.","highlight_start":1,"highlight_end":35},{"text":"                1 pulsed_rdy, //Enable pulsed data-ready mode.","highlight_start":1,"highlight_end":63},{"text":"                0 int2_input_ah //Is INT2 input trigger active high","highlight_start":1,"highlight_end":68},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x14 CTRL5 rw","highlight_start":1,"highlight_end":25},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                2..1 bus_act_sel, //Bus available time select for IBI.","highlight_start":1,"highlight_end":71},{"text":"                    //00: 2u.","highlight_start":1,"highlight_end":30},{"text":"                    //01: 50u (default).","highlight_start":1,"highlight_end":41},{"text":"                    //10: 1ms.","highlight_start":1,"highlight_end":31},{"text":"                    //11: 25ms.","highlight_start":1,"highlight_end":32},{"text":"                0 int_i3c //Enables INT pin when I3C is enabled. Default 0.","highlight_start":1,"highlight_end":76},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x15 CTRL6 rw","highlight_start":1,"highlight_end":25},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                6..4 gyro_lpbw, //Gyro low-pass bandwidth select. See datasheet.","highlight_start":1,"highlight_end":81},{"text":"                3..0 gyro_fs //Gyro UI chain full-scale select.","highlight_start":1,"highlight_end":64},{"text":"                    //0000: �125dps (default)","highlight_start":1,"highlight_end":46},{"text":"                    //0001: �250dps","highlight_start":1,"highlight_end":36},{"text":"                    //0010: �500dps","highlight_start":1,"highlight_end":36},{"text":"                    //0011: �1000dps","highlight_start":1,"highlight_end":37},{"text":"                    //0100: �2000dps","highlight_start":1,"highlight_end":37},{"text":"                    //1100: �4000dps","highlight_start":1,"highlight_end":37},{"text":"                    //Others: reserved","highlight_start":1,"highlight_end":39},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x16 CTRL7 rw","highlight_start":1,"highlight_end":25},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                0 gyro_lp_enable //enable gyro low-pass filter","highlight_start":1,"highlight_end":63},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x17 CTRL8 rw","highlight_start":1,"highlight_end":25},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7..5 accel_hplp_bw, //Accel high-pass and low-pass bandwidth.","highlight_start":1,"highlight_end":78},{"text":"                    //See datasheet because big table.","highlight_start":1,"highlight_end":55},{"text":"                3 accel_dc, //Enables dual-channel mode. Default 0 (disabled).","highlight_start":1,"highlight_end":79},{"text":"                1..0 accel_fs //Accel full-scale select.","highlight_start":1,"highlight_end":57},{"text":"                    //00: �2g","highlight_start":1,"highlight_end":30},{"text":"                    //01: �4g","highlight_start":1,"highlight_end":30},{"text":"                    //10: �8g","highlight_start":1,"highlight_end":30},{"text":"                    //11: �16g","highlight_start":1,"highlight_end":31},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x18 CTRL9 rw","highlight_start":1,"highlight_end":25},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                6 accel_hpref, //Enabled accel high-pass reference mode. Default 0.","highlight_start":1,"highlight_end":84},{"text":"                5 accel_fast_settle, //Enables filter fast settling mode. Def 0.","highlight_start":1,"highlight_end":81},{"text":"                4 accel_hp_slope, //Accel slope filter/HP filter selection.","highlight_start":1,"highlight_end":76},{"text":"                    //0: LP filter path","highlight_start":1,"highlight_end":40},{"text":"                    //1: HP filter path","highlight_start":1,"highlight_end":40},{"text":"                3 accel_lpf2, //enables second stage filtering for accel","highlight_start":1,"highlight_end":73},{"text":"                1 accel_ofs_w, //Accel user register offset weight","highlight_start":1,"highlight_end":67},{"text":"                    //0: 2^-10g/LSB","highlight_start":1,"highlight_end":36},{"text":"                    //1: 2^-6g/LSB","highlight_start":1,"highlight_end":35},{"text":"                0 accel_ofs_en //Enables accel user offset correction block.","highlight_start":1,"highlight_end":77},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x19 CTRL10 rw","highlight_start":1,"highlight_end":26},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                6 emb_debug, //Enables embedded function debug mode","highlight_start":1,"highlight_end":68},{"text":"                3..2 gyro_st, //Gyro self-test select","highlight_start":1,"highlight_end":54},{"text":"                    //00: normal (default)","highlight_start":1,"highlight_end":43},{"text":"                    //01: positive sign","highlight_start":1,"highlight_end":40},{"text":"                    //10: negative sign","highlight_start":1,"highlight_end":40},{"text":"                    //11: reserved","highlight_start":1,"highlight_end":35},{"text":"                1..0 accel_st //Accel self-test select","highlight_start":1,"highlight_end":55},{"text":"                    //00: normal (default)","highlight_start":1,"highlight_end":43},{"text":"                    //01: positive sign","highlight_start":1,"highlight_end":40},{"text":"                    //10: negative sign","highlight_start":1,"highlight_end":40},{"text":"                    //11: reserved","highlight_start":1,"highlight_end":35},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x1A CTRL_STATUS r","highlight_start":1,"highlight_end":30},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                2 ctrl_status //Flag that indicates the current controller of","highlight_start":1,"highlight_end":78},{"text":"                    //the device's config registers. Default 0.","highlight_start":1,"highlight_end":64},{"text":"                    //0: All registers and configs are available from the standard","highlight_start":1,"highlight_end":83},{"text":"                    //interface.","highlight_start":1,"highlight_end":33},{"text":"                    //1: Some registers and configs are under FSM control and are ","highlight_start":1,"highlight_end":83},{"text":"                    //in read-only mode from the standard interface.","highlight_start":1,"highlight_end":69},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x1B FIFO_STATUS1 r fifo_diff[0..7], //Number of unread sensor data","highlight_start":1,"highlight_end":79},{"text":"                //(TAG + 6 bytes) stored in FIFO.","highlight_start":1,"highlight_end":50},{"text":"           0x1C FIFO_STATUS2 r","highlight_start":1,"highlight_end":31},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7 fifo_wtm_ia, //FIFO watermark status","highlight_start":1,"highlight_end":55},{"text":"                6 fifo_ovr_ia, //FIFO overrun status","highlight_start":1,"highlight_end":53},{"text":"                5 fifo_full_ia, //FIFO full status, 1: will be full at next ODR","highlight_start":1,"highlight_end":80},{"text":"                4 ctr_bdr_ia, //COUNTER_BDR_IA status, shows if threshold reached","highlight_start":1,"highlight_end":82},{"text":"                3 fifo_ovr_latched, //FIFO latched overrun status","highlight_start":1,"highlight_end":66},{"text":"                0 fifo_diff[8]","highlight_start":1,"highlight_end":31},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x1D ALL_INT_SRC r //Source register for all interrupts","highlight_start":1,"highlight_end":67},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7 emb_ia, //embedded func interrupt status","highlight_start":1,"highlight_end":59},{"text":"                6 shub_ia, //sensor hub interrupt status","highlight_start":1,"highlight_end":57},{"text":"                5 sleep_ia, //Detects change in activity/inactivity status","highlight_start":1,"highlight_end":75},{"text":"                4 d6d_ia, //Orientation change status","highlight_start":1,"highlight_end":54},{"text":"                2 tap_ia, //single or double tap event detection status","highlight_start":1,"highlight_end":72},{"text":"                1 wu_ia, //wake event status","highlight_start":1,"highlight_end":45},{"text":"                0 ff_ia //free-fall event status","highlight_start":1,"highlight_end":49},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x1E STATUS_REG r","highlight_start":1,"highlight_end":29},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7 ts_endcnt, //Timestamp overflow alert","highlight_start":1,"highlight_end":56},{"text":"                5 ois_rdy, //Accel or gyro OIS data ready","highlight_start":1,"highlight_end":58},{"text":"                4 gda_eis, //EIS gyro data ready","highlight_start":1,"highlight_end":49},{"text":"                2 temp_da, //temp data available","highlight_start":1,"highlight_end":49},{"text":"                1 gyro_da, //gyro data available","highlight_start":1,"highlight_end":49},{"text":"                0 accel_da //accel data available","highlight_start":1,"highlight_end":50},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x20 OUT_TEMP_L r temp_data[8..15], //Temp data output register","highlight_start":1,"highlight_end":75},{"text":"           0x21 OUT_TEMP_H r temp_data[0..7],","highlight_start":1,"highlight_end":46},{"text":"           0x22 OUTX_L_G r gyro_pitch_rate[8..15], //Gyro pitch axis angular rate","highlight_start":1,"highlight_end":82},{"text":"           0x23 OUTX_H_G r gyro_pitch_rate[0..7],","highlight_start":1,"highlight_end":50},{"text":"           0x24 OUTY_L_G r gyro_roll_rate[8..15], //Gyro roll axis angular rate","highlight_start":1,"highlight_end":80},{"text":"           0x25 OUTY_H_G r gyro_roll_rate[0..7],","highlight_start":1,"highlight_end":49},{"text":"           0x26 OUTZ_L_G r gyro_yaw_rate[8..15], //Gyro yaw axis angular rate","highlight_start":1,"highlight_end":78},{"text":"           0x27 OUTZ_H_G r gyro_yaw_rate[0..7],","highlight_start":1,"highlight_end":48},{"text":"           0x28 OUTX_L_A r accel_x[8..15], //Accel x output","highlight_start":1,"highlight_end":60},{"text":"           0x29 OUTX_H_A r accel_x[0..7],","highlight_start":1,"highlight_end":42},{"text":"           0x2A OUTY_L_A r accel_y[8..15], //Accel y output","highlight_start":1,"highlight_end":60},{"text":"           0x2B OUTY_H_A r accel_y[0..7],","highlight_start":1,"highlight_end":42},{"text":"           0x2C OUTZ_L_A r accel_z[8..15], //Accel z output","highlight_start":1,"highlight_end":60},{"text":"           0x2D OUTZ_H_A r accel_z[0..7],","highlight_start":1,"highlight_end":42},{"text":"           0x2E UI_OUTX_L_G_OIS_EIS r x_ois_eis[8..15], //x axis OIS/EIS","highlight_start":1,"highlight_end":73},{"text":"           0x2F UI_OUTX_H_G_OIS_EIS r x_ois_eis[0..7],","highlight_start":1,"highlight_end":55},{"text":"           0x30 UI_OUTY_L_G_OIS_EIS r y_ois_eis[8..15], //y axis OIS/EIS","highlight_start":1,"highlight_end":73},{"text":"           0x31 UI_OUTY_H_G_OIS_EIS r y_ois_eis[0..7],","highlight_start":1,"highlight_end":55},{"text":"           0x32 UI_OUTZ_L_G_OIS_EIS r z_ois_eis[8..15], //z axis OIS/EIS","highlight_start":1,"highlight_end":73},{"text":"           0x33 UI_OUTZ_H_G_OIS_EIS r z_ois_eis[0..7],","highlight_start":1,"highlight_end":55},{"text":"           0x34 UI_OUTX_L_A_OIS_DualC r x_ois_dc[8..15], //x axis OIS/DualC","highlight_start":1,"highlight_end":76},{"text":"           0x35 UI_OUTX_H_A_OIS_DualC r x_ois_dc[0..7],","highlight_start":1,"highlight_end":56},{"text":"           0x36 UI_OUTY_L_A_OIS_DualC r y_ois_dc[8..15], //y axis OIS/DualC","highlight_start":1,"highlight_end":76},{"text":"           0x37 UI_OUTY_H_A_OIS_DualC r y_ois_dc[0..7],","highlight_start":1,"highlight_end":56},{"text":"           0x38 UI_OUTZ_L_A_OIS_DualC r z_ois_dc[8..15], //z axis OIS/DualC","highlight_start":1,"highlight_end":76},{"text":"           0x39 UI_OUTZ_H_A_OIS_DualC r z_ois_dc[0..7],","highlight_start":1,"highlight_end":56},{"text":"           0x40 TIMESTAMP0 r timestamp[0..7], //Timestamp output. 1LSB = 21.75u","highlight_start":1,"highlight_end":80},{"text":"           0x41 TIMESTAMP1 r timestamp[8..15],","highlight_start":1,"highlight_end":47},{"text":"           0x42 TIMESTAMP2 r timestamp[16..23],","highlight_start":1,"highlight_end":48},{"text":"           0x43 TIMESTAMP3 r timestamp[24..31],","highlight_start":1,"highlight_end":48},{"text":"           0x44 UI_STATUS_REG_OIS r","highlight_start":1,"highlight_end":36},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                2 gyro_settling, //High when gyro is settling","highlight_start":1,"highlight_end":62},{"text":"                1 gda_ois, //Is gyro OIS data available","highlight_start":1,"highlight_end":56},{"text":"                0 accel_da_ois //Is accel OIS data available","highlight_start":1,"highlight_end":61},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x45 WAKE_UP_SRC r","highlight_start":1,"highlight_end":30},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                6 sleep_change_ia, //Detects change event in activity/inactivity","highlight_start":1,"highlight_end":81},{"text":"                5 wakeup_ff_ia, //Detects free-fall event","highlight_start":1,"highlight_end":58},{"text":"                4 sleep_state, //Sleep status bit","highlight_start":1,"highlight_end":50},{"text":"                3 wu_detect, //wake-up detection status","highlight_start":1,"highlight_end":56},{"text":"                2 x_wu, //wake-up on x-axis","highlight_start":1,"highlight_end":44},{"text":"                1 y_wu, //wake-up on y-axis","highlight_start":1,"highlight_end":44},{"text":"                0 z_wu //wake-up on z-axis","highlight_start":1,"highlight_end":43},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x46 TAP_SRC r","highlight_start":1,"highlight_end":26},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                6 tap_src_ia, //tap event detection status","highlight_start":1,"highlight_end":59},{"text":"                5 single_tap, //single-tap event status","highlight_start":1,"highlight_end":56},{"text":"                4 double_tap, //double-tap event status","highlight_start":1,"highlight_end":56},{"text":"                3 tap_sign, //sign of acceleration detected by tap event","highlight_start":1,"highlight_end":73},{"text":"                2 x_tap, //tap event on x-axis","highlight_start":1,"highlight_end":47},{"text":"                1 y_tap, //tap event on y-axis","highlight_start":1,"highlight_end":47},{"text":"                0 z_tap, //tap event on z-axis","highlight_start":1,"highlight_end":47},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x47 D6D_SRC r","highlight_start":1,"highlight_end":26},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                6 d6d_src_ia, //orientation change interrupt status","highlight_start":1,"highlight_end":68},{"text":"                5 z_high, //z-axis high event","highlight_start":1,"highlight_end":46},{"text":"                4 z_low, //z-axis low event","highlight_start":1,"highlight_end":44},{"text":"                3 y_high, //y-axis high event","highlight_start":1,"highlight_end":46},{"text":"                2 y_low, //y-axis low event","highlight_start":1,"highlight_end":44},{"text":"                1 x_high, //x-axis high event","highlight_start":1,"highlight_end":46},{"text":"                0 x_low //x-axis low event","highlight_start":1,"highlight_end":43},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x49 EMB_FUNC_STATUS_MAINPAGE r","highlight_start":1,"highlight_end":43},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7 is_fsm_lc, //Interrupt status bit for FSM long counter timeout","highlight_start":1,"highlight_end":81},{"text":"                5 is_sigmot, //Interrupt status bit for significant motion detection","highlight_start":1,"highlight_end":85},{"text":"                4 is_tilt, //Interrupt status bit for tilt detection","highlight_start":1,"highlight_end":69},{"text":"                3 is_step_det //Interrupt status bit for step detection","highlight_start":1,"highlight_end":72},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x4A FSM_STATUS_MAINPAGE r","highlight_start":1,"highlight_end":38},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7 is_fsm8, //FSM8 interrupt status","highlight_start":1,"highlight_end":51},{"text":"                6 is_fsm7, //FSM7 interrupt status","highlight_start":1,"highlight_end":51},{"text":"                5 is_fsm6, //FSM6 interrupt status","highlight_start":1,"highlight_end":51},{"text":"                4 is_fsm5, //FSM5 interrupt status","highlight_start":1,"highlight_end":51},{"text":"                3 is_fsm4, //FSM4 interrupt status","highlight_start":1,"highlight_end":51},{"text":"                2 is_fsm3, //FSM3 interrupt status","highlight_start":1,"highlight_end":51},{"text":"                1 is_fsm2, //FSM2 interrupt status","highlight_start":1,"highlight_end":51},{"text":"                0 is_fsm1 //FSM1 interrupt status","highlight_start":1,"highlight_end":50},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x4F INTERNAL_FREQ_FINE r freq_fine, //Difference in percentage of","highlight_start":1,"highlight_end":78},{"text":"                //the effective ODR (and timestamp rate) with respect to the typical.","highlight_start":1,"highlight_end":86},{"text":"                //Step: 0.13%. 8-bit format, two's complement.","highlight_start":1,"highlight_end":63},{"text":"                //See datasheet for more info.","highlight_start":1,"highlight_end":47},{"text":"           0x50 FUNCTIONS_ENABLE rw","highlight_start":1,"highlight_end":36},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7 enable_interrupts, //Enable basic interrupts","highlight_start":1,"highlight_end":63},{"text":"                6 enable_timestamp, //Enable timestamp counter","highlight_start":1,"highlight_end":63},{"text":"                3 dis_res_on_read_all_int, //Disable reset latched on reading","highlight_start":1,"highlight_end":78},{"text":"                    //ALL_INT_SRC","highlight_start":1,"highlight_end":34},{"text":"                1..0 enable_inact //Enables sleep function. Default value: 00","highlight_start":1,"highlight_end":78},{"text":"                    //00: stationary/motion-only interrupts generated,","highlight_start":1,"highlight_end":71},{"text":"                    //accel/gyro configuration do not change.","highlight_start":1,"highlight_end":62},{"text":"                    //01: sets accel to low-power mode 1 with accel ODR selected","highlight_start":1,"highlight_end":81},{"text":"                    //through the XL_INACT_ODR_[1:0] bits of the INACTIVITY_DUR (54h)","highlight_start":1,"highlight_end":86},{"text":"                    //register, gyroscope configuration does not change.","highlight_start":1,"highlight_end":73},{"text":"                    //10: sets accelerometer to low-power mode 1 with accelerometer","highlight_start":1,"highlight_end":84},{"text":"                    //ODR selected through the XL_INACT_ODR_[1:0] bits of the","highlight_start":1,"highlight_end":78},{"text":"                    //INACTIVITY_DUR (54h) register, gyroscope in sleep mode;","highlight_start":1,"highlight_end":78},{"text":"                    //11: sets accelerometer to low-power mode 1 with accelerometer","highlight_start":1,"highlight_end":84},{"text":"                    //ODR selected through the XL_INACT_ODR_[1:0] bits of the","highlight_start":1,"highlight_end":78},{"text":"                    //INACTIVITY_DUR (54h) register, gyroscope in power-down mode","highlight_start":1,"highlight_end":82},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x51 DEN rw","highlight_start":1,"highlight_end":23},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                6 den_lvl, //Enables DEN data level-sensitive trigger mode","highlight_start":1,"highlight_end":75},{"text":"                5 den_lvl_latched, //Enables DEN data level-sensitive latched mode","highlight_start":1,"highlight_end":83},{"text":"                4 den_accel, //Extends DEN to accel","highlight_start":1,"highlight_end":52},{"text":"                3 den_x, //DEN value stored on LSB of x-axis, default yes","highlight_start":1,"highlight_end":74},{"text":"                2 den_y, //DEN value stored on LSB of y-axis, default yes","highlight_start":1,"highlight_end":74},{"text":"                1 den_z, //DEN value stored on LSB of z-axis, default yes","highlight_start":1,"highlight_end":74},{"text":"                0 den_accel_gyro //DEN stamping sensor selection. Default 0.","highlight_start":1,"highlight_end":77},{"text":"                    //0: DEN pin info stamped in the gyroscope axis selected by bits","highlight_start":1,"highlight_end":85},{"text":"                    //DEN_X, DEN_Y, DEN_Z","highlight_start":1,"highlight_end":42},{"text":"                    //1: DEN pin info stamped in the accelerometer axis selected by","highlight_start":1,"highlight_end":84},{"text":"                    //bits DEN_X, DEN_Y, DEN_Z)","highlight_start":1,"highlight_end":48},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x54 INACTIVITY_DUR rw","highlight_start":1,"highlight_end":34},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7 sleep_status_on_int, //Sleep interrupt mode configuration.","highlight_start":1,"highlight_end":77},{"text":"                    //If the INT1_SLEEP_CHANGE or INT2_SLEEP_CHANGE bit is enabled,","highlight_start":1,"highlight_end":84},{"text":"                    //drives the sleep status or sleep change on the INT pin.","highlight_start":1,"highlight_end":78},{"text":"                    //Default value: 0","highlight_start":1,"highlight_end":39},{"text":"                    //0: sleep change notification on INT pin","highlight_start":1,"highlight_end":62},{"text":"                    //1: sleep status reported on INT pin","highlight_start":1,"highlight_end":58},{"text":"                6..4 wu_inact_ths_w,","highlight_start":1,"highlight_end":37},{"text":"                    //Weight of 1 LSB of wake-up (WU_THS) and activity/inactivity","highlight_start":1,"highlight_end":82},{"text":"                    //(INACT_THS) threshold.","highlight_start":1,"highlight_end":45},{"text":"                    //000: 7.8125 mg/LSB (default)","highlight_start":1,"highlight_end":51},{"text":"                    //001: 15.625 mg/LSB;","highlight_start":1,"highlight_end":42},{"text":"                    //010: 31.25 mg/LSB;","highlight_start":1,"highlight_end":41},{"text":"                    //011: 62.5 mg/LSB;","highlight_start":1,"highlight_end":40},{"text":"                    //100: 125 mg/LSB;","highlight_start":1,"highlight_end":39},{"text":"                    //101 - 110 - 111: 250 mg/LSB","highlight_start":1,"highlight_end":50},{"text":"                3..2 accel_inact_odr, //Selects the ODR_XL target during inactivity.","highlight_start":1,"highlight_end":85},{"text":"                    //00: 1.875 Hz;","highlight_start":1,"highlight_end":36},{"text":"                    //01: 15 Hz (default);","highlight_start":1,"highlight_end":43},{"text":"                    //10: 30 Hz;","highlight_start":1,"highlight_end":33},{"text":"                    //11: 60 Hz","highlight_start":1,"highlight_end":32},{"text":"                1..0 inact_dur","highlight_start":1,"highlight_end":31},{"text":"                    //Duration in the transition from stationary to motion","highlight_start":1,"highlight_end":75},{"text":"                    //(from inactivity to activity).","highlight_start":1,"highlight_end":53},{"text":"                    //00: transition to motion (activity) immediately at first","highlight_start":1,"highlight_end":79},{"text":"                    //overthreshold event (default);","highlight_start":1,"highlight_end":53},{"text":"                    //01: transition to motion (activity) after two consecutive","highlight_start":1,"highlight_end":80},{"text":"                    //overthreshold events;","highlight_start":1,"highlight_end":44},{"text":"                    //10: transition to motion (activity) after three consecutive","highlight_start":1,"highlight_end":82},{"text":"                    //overthreshold events;","highlight_start":1,"highlight_end":44},{"text":"                    //11: transition to motion (activity) after four consecutive","highlight_start":1,"highlight_end":81},{"text":"                    //overthreshold events","highlight_start":1,"highlight_end":43},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x55 INACTIVITY_THS rw","highlight_start":1,"highlight_end":34},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                5..0 inact_ths //Activity/inactivity threshold. The resolution of the","highlight_start":1,"highlight_end":86},{"text":"                    //threshold depends on the value of WU_INACT_THS_W_[2:0] in the","highlight_start":1,"highlight_end":84},{"text":"                    //INACTIVITY_DUR (54h) register. Default value: 000000","highlight_start":1,"highlight_end":75},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x56 TAP_CFG0 rw","highlight_start":1,"highlight_end":28},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                6 low_pass_on_6d,","highlight_start":1,"highlight_end":34},{"text":"                    //LPF2 filter on 6D function selection. Refer to Figure 30.","highlight_start":1,"highlight_end":80},{"text":"                    //Default value: 0","highlight_start":1,"highlight_end":39},{"text":"                    //0: ODR/2 low-pass filtered data sent to 6D interrupt function;","highlight_start":1,"highlight_end":85},{"text":"                    //1: LPF2 output data sent to 6D interrupt function","highlight_start":1,"highlight_end":72},{"text":"                5 hw_func_mask_accel_settle,","highlight_start":1,"highlight_end":45},{"text":"                    //Enables masking the execution trigger of the basic interrupt","highlight_start":1,"highlight_end":83},{"text":"                    //functions (6D/4D, free-fall, wake-up, tap, activity/inactivity)","highlight_start":1,"highlight_end":86},{"text":"                    //when accelerometer data are settling. Default value: 0","highlight_start":1,"highlight_end":77},{"text":"                    //Note: Refer to the product application note for the details","highlight_start":1,"highlight_end":82},{"text":"                    //regarding operating/power mode configurations, settings,","highlight_start":1,"highlight_end":79},{"text":"                    //turn-on/off time and on-the-fly changes.","highlight_start":1,"highlight_end":63},{"text":"                4 slope_fds,","highlight_start":1,"highlight_end":29},{"text":"                    //HPF or slope filter selection on wake-up and activity/inactivit","highlight_start":1,"highlight_end":86},{"text":"                    //functions. Refer to Figure 30 (datasheet).","highlight_start":1,"highlight_end":65},{"text":"                3 tap_x_en, //enable x tap recognition","highlight_start":1,"highlight_end":55},{"text":"                2 tap_y_en, //enable y tap recognition","highlight_start":1,"highlight_end":55},{"text":"                1 tap_z_en, //enable z tap recognition","highlight_start":1,"highlight_end":55},{"text":"                0 lir //Latched interrupt","highlight_start":1,"highlight_end":42},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x57 TAP_CFG1 rw","highlight_start":1,"highlight_end":28},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7..5 tap_priority, //Selection of axis priority for tap detection","highlight_start":1,"highlight_end":82},{"text":"                    //input     max     mid     min","highlight_start":1,"highlight_end":52},{"text":"                    //000       x       y       z","highlight_start":1,"highlight_end":50},{"text":"                    //001       y       x       z","highlight_start":1,"highlight_end":50},{"text":"                    //010       x       z       y","highlight_start":1,"highlight_end":50},{"text":"                    //011       z       y       x","highlight_start":1,"highlight_end":50},{"text":"                    //100       x       y       z","highlight_start":1,"highlight_end":50},{"text":"                    //101       y       z       x","highlight_start":1,"highlight_end":50},{"text":"                    //110       z       x       y","highlight_start":1,"highlight_end":50},{"text":"                    //111       z       y       x","highlight_start":1,"highlight_end":50},{"text":"                4..0 tap_ths_x //X-axis tap recognition threshold. Default value: 0","highlight_start":1,"highlight_end":84},{"text":"                    //1 LSB = FS_XL / (2^5)","highlight_start":1,"highlight_end":44},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x58 TAP_CFG2 rw","highlight_start":1,"highlight_end":28},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                4..0 tap_ths_y //like tap_ths_x but y","highlight_start":1,"highlight_end":54},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x59 TAP_THS_6D rw","highlight_start":1,"highlight_end":30},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7 d4d_en, //Enables 4D orientation detection.","highlight_start":1,"highlight_end":62},{"text":"                    //Z-axis position detection is disabled. Default value: 0","highlight_start":1,"highlight_end":78},{"text":"                6..5 sixd_ths, //Threshold for 4D/6D function. Default value: 00","highlight_start":1,"highlight_end":81},{"text":"                    //00: 80�","highlight_start":1,"highlight_end":30},{"text":"                    //01: 70�","highlight_start":1,"highlight_end":30},{"text":"                    //10: 60�","highlight_start":1,"highlight_end":30},{"text":"                    //11: 50�","highlight_start":1,"highlight_end":30},{"text":"                4..0 tap_ths_z //like tap_ths_x but z","highlight_start":1,"highlight_end":54},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x5A TAP_DUR rw","highlight_start":1,"highlight_end":27},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7..4 tap_dur, //","highlight_start":1,"highlight_end":33},{"text":"                    //Duration of maximum time gap for double-tap recognition.","highlight_start":1,"highlight_end":79},{"text":"                    //Default: 0000","highlight_start":1,"highlight_end":36},{"text":"                    //When double-tap recognition is enabled, this register expresses","highlight_start":1,"highlight_end":86},{"text":"                    //the maximum time between two consecutive detected taps to","highlight_start":1,"highlight_end":80},{"text":"                    //determine a double-tap event. The default value of these bits is","highlight_start":1,"highlight_end":87},{"text":"                    //0000b which corresponds to 16/ODR_XL time. If the DUR_[3:0] bits","highlight_start":1,"highlight_end":87},{"text":"                    //are set to a different value, 1LSB corresponds to 32/ODR_XL","highlight_start":1,"highlight_end":82},{"text":"                    //time.","highlight_start":1,"highlight_end":28},{"text":"                3..2 tap_quiet, //","highlight_start":1,"highlight_end":35},{"text":"                    //Expected quiet time after a tap detection. Default value: 00","highlight_start":1,"highlight_end":83},{"text":"                    //Quiet time is the time after the first detected tap in which","highlight_start":1,"highlight_end":83},{"text":"                    //there must not be any overthreshold event. The default value of","highlight_start":1,"highlight_end":86},{"text":"                    //these bits is 00b which corresponds to 2/ODR_XL time. If the","highlight_start":1,"highlight_end":83},{"text":"                    //QUIET_[1:0] bits are set to a different value, 1LSB corresponds","highlight_start":1,"highlight_end":86},{"text":"                    //to 4/ODR_XL time.","highlight_start":1,"highlight_end":40},{"text":"                1..0 tap_shock //","highlight_start":1,"highlight_end":34},{"text":"                    //Maximum duration of overthreshold event. Default value: 00","highlight_start":1,"highlight_end":81},{"text":"                    //Maximum duration is the maximum time of an overthreshold","highlight_start":1,"highlight_end":79},{"text":"                    //signal detection to be recognized as a tap event. The default","highlight_start":1,"highlight_end":84},{"text":"                    //value of these bits is 00b which corresponds to 4/ODR_XL time.","highlight_start":1,"highlight_end":85},{"text":"                    //If the SHOCK_[1:0] bits are set to a different value, 1LSB","highlight_start":1,"highlight_end":81},{"text":"                    //corresponds to 8/ODR_XL time.","highlight_start":1,"highlight_end":52},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x5B WAKE_UP_THS rw","highlight_start":1,"highlight_end":31},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7 single_double_tap, //Enables single/double-tap event. Default 0","highlight_start":1,"highlight_end":82},{"text":"                6 usr_off_on_wu, //","highlight_start":1,"highlight_end":36},{"text":"                    //Drives the low-pass filtered data with user offset correction","highlight_start":1,"highlight_end":84},{"text":"                    //(instead of high-pass filtered data) to the wake-up and the","highlight_start":1,"highlight_end":82},{"text":"                    //activity/inactivity functions. Refer to Figure 30. Default","highlight_start":1,"highlight_end":81},{"text":"                    //value: 0","highlight_start":1,"highlight_end":31},{"text":"                5..0 wk_ths //","highlight_start":1,"highlight_end":31},{"text":"                    //Wake-up threshold. The resolution of the threshold depends on","highlight_start":1,"highlight_end":84},{"text":"                    //the value of WU_INACT_THS_W_[2:0] in the INACTIVITY_DUR (54h)","highlight_start":1,"highlight_end":84},{"text":"                    //register. Default value: 000000","highlight_start":1,"highlight_end":54},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x5C WAKE_UP_DUR rw","highlight_start":1,"highlight_end":31},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7 ff_dur[0], //Free-fall duration event. Default: 0","highlight_start":1,"highlight_end":68},{"text":"                    //For the complete configuration of the free-fall duration, refer","highlight_start":1,"highlight_end":86},{"text":"                    //to FF_DUR_[4:0] in the FREE_FALL (5Dh) configuration.","highlight_start":1,"highlight_end":76},{"text":"                    //1 LSB = 1/ODR_XL time","highlight_start":1,"highlight_end":44},{"text":"                6..5 wake_dur, //Wake-up duration event. Default: 00","highlight_start":1,"highlight_end":69},{"text":"                    //1 LSB = 1/ODR_XL time","highlight_start":1,"highlight_end":44},{"text":"                3..0 sleep_dur //","highlight_start":1,"highlight_end":34},{"text":"                    //Duration to go in sleep mode. Default value:","highlight_start":1,"highlight_end":67},{"text":"                    //0000 (this corresponds to 16 ODR)","highlight_start":1,"highlight_end":56},{"text":"                    //1 LSB = 512/ODR_XL time","highlight_start":1,"highlight_end":46},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x5D FREE_FALL rw","highlight_start":1,"highlight_end":29},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7..3 ff_dur[1..5], //Free-fall duration event. Default: 00000","highlight_start":1,"highlight_end":78},{"text":"                    //For the complete configuration of the free-fall duration, refer","highlight_start":1,"highlight_end":86},{"text":"                    //to FF_DUR_5 in the WAKE_UP_DUR (5Ch) configuration.","highlight_start":1,"highlight_end":74},{"text":"                2..0 ff_ths, //Free-fall threshold setting. Default: 000","highlight_start":1,"highlight_end":73},{"text":"                    //000: 156mg","highlight_start":1,"highlight_end":33},{"text":"                    //001: 219mg","highlight_start":1,"highlight_end":33},{"text":"                    //010: 250mg","highlight_start":1,"highlight_end":33},{"text":"                    //011: 312mg","highlight_start":1,"highlight_end":33},{"text":"                    //100: 344mg","highlight_start":1,"highlight_end":33},{"text":"                    //101: 406mg","highlight_start":1,"highlight_end":33},{"text":"                    //110: 469mg","highlight_start":1,"highlight_end":33},{"text":"                    //111: 500mg","highlight_start":1,"highlight_end":33},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x5E MD1_CFG rw","highlight_start":1,"highlight_end":27},{"text":"               //Functions routing to INT1 pin register (R/W). Each bit in this","highlight_start":1,"highlight_end":80},{"text":"               //register enables a signal to be carried over the INT1 pin. The output","highlight_start":1,"highlight_end":87},{"text":"               //of the pin is the OR combination of the signals selected here and in","highlight_start":1,"highlight_end":86},{"text":"               //the INT1_CTRL (0Dh) register.","highlight_start":1,"highlight_end":47},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7 int1_sleep_change, //","highlight_start":1,"highlight_end":40},{"text":"                    //Routing activity/inactivity recognition event to INT1.","highlight_start":1,"highlight_end":77},{"text":"                    //Default: 0","highlight_start":1,"highlight_end":33},{"text":"                    //(0: routing activity/inactivity event to INT1 disabled;","highlight_start":1,"highlight_end":78},{"text":"                    //1: routing activity/inactivity event to INT1 enabled)","highlight_start":1,"highlight_end":76},{"text":"                6 int1_single_tap, //","highlight_start":1,"highlight_end":38},{"text":"                    //Routing single-tap recognition event to INT1. Default: 0","highlight_start":1,"highlight_end":79},{"text":"                    //(0: routing single-tap event to INT1 disabled;","highlight_start":1,"highlight_end":69},{"text":"                    //1: routing single-tap event to INT1 enabled)","highlight_start":1,"highlight_end":67},{"text":"                5 int1_wu, //","highlight_start":1,"highlight_end":30},{"text":"                    //Routing wake-up event to INT1. Default value: 0","highlight_start":1,"highlight_end":70},{"text":"                    //(0: routing wake-up event to INT1 disabled;","highlight_start":1,"highlight_end":66},{"text":"                    //1: routing wake-up event to INT1 enabled)","highlight_start":1,"highlight_end":64},{"text":"                4 int1_ff, //","highlight_start":1,"highlight_end":30},{"text":"                    //Routing free-fall event to INT1. Default value: 0","highlight_start":1,"highlight_end":72},{"text":"                    //(0: routing free-fall event to INT1 disabled;","highlight_start":1,"highlight_end":68},{"text":"                    //1: routing free-fall event to INT1 enabled)","highlight_start":1,"highlight_end":66},{"text":"                3 int1_double_tap, //","highlight_start":1,"highlight_end":38},{"text":"                    //Routing tap event to INT1. Default value: 0","highlight_start":1,"highlight_end":66},{"text":"                    //(0: routing double-tap event to INT1 disabled;","highlight_start":1,"highlight_end":69},{"text":"                    //1: routing double-tap event to INT1 enabled)","highlight_start":1,"highlight_end":67},{"text":"                2 int1_6d, //","highlight_start":1,"highlight_end":30},{"text":"                    //Routing 6D event to INT1. Default value: 0","highlight_start":1,"highlight_end":65},{"text":"                    //(0: routing 6D event to INT1 disabled;","highlight_start":1,"highlight_end":61},{"text":"                    //1: routing 6D event to INT1 enabled)","highlight_start":1,"highlight_end":59},{"text":"                1 int1_emb, //","highlight_start":1,"highlight_end":31},{"text":"                    //Routing embedded functions event to INT1. Default value: 0","highlight_start":1,"highlight_end":81},{"text":"                    //(0: routing embedded functions event to INT1 disabled;","highlight_start":1,"highlight_end":77},{"text":"                    //1: routing embedded functions event to INT1 enabled)","highlight_start":1,"highlight_end":75},{"text":"                0 int1_shub //","highlight_start":1,"highlight_end":31},{"text":"                    //Routing sensor hub communication concluded event to INT1.","highlight_start":1,"highlight_end":80},{"text":"                    //Default value: 0","highlight_start":1,"highlight_end":39},{"text":"                    //(0: routing sensor hub communication concluded event to","highlight_start":1,"highlight_end":78},{"text":"                    //INT1 disabled;","highlight_start":1,"highlight_end":37},{"text":"                    //1: routing sensor hub communication concluded event to INT1","highlight_start":1,"highlight_end":82},{"text":"                    //enabled)","highlight_start":1,"highlight_end":31},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x5F MD2_CFG rw","highlight_start":1,"highlight_end":27},{"text":"               //Functions routing to INT2 pin register (R/W). Each bit in this","highlight_start":1,"highlight_end":80},{"text":"               //register enables a signal to be carried over the INT2 pin. The output","highlight_start":1,"highlight_end":87},{"text":"               //of the pin is the OR combination of the signals selected here and in","highlight_start":1,"highlight_end":86},{"text":"               //the INT2_CTRL (0Eh) register.","highlight_start":1,"highlight_end":47},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7 int2_sleep_change, //","highlight_start":1,"highlight_end":40},{"text":"                    //Routing activity/inactivity recognition event to INT1.","highlight_start":1,"highlight_end":77},{"text":"                    //Default: 0","highlight_start":1,"highlight_end":33},{"text":"                    //(0: routing activity/inactivity event to INT1 disabled;","highlight_start":1,"highlight_end":78},{"text":"                    //1: routing activity/inactivity event to INT1 enabled)","highlight_start":1,"highlight_end":76},{"text":"                6 int2_single_tap, //","highlight_start":1,"highlight_end":38},{"text":"                    //Routing single-tap recognition event to INT1. Default: 0","highlight_start":1,"highlight_end":79},{"text":"                    //(0: routing single-tap event to INT1 disabled;","highlight_start":1,"highlight_end":69},{"text":"                    //1: routing single-tap event to INT1 enabled)","highlight_start":1,"highlight_end":67},{"text":"                5 int2_wu, //","highlight_start":1,"highlight_end":30},{"text":"                    //Routing wake-up event to INT1. Default value: 0","highlight_start":1,"highlight_end":70},{"text":"                    //(0: routing wake-up event to INT1 disabled;","highlight_start":1,"highlight_end":66},{"text":"                    //1: routing wake-up event to INT1 enabled)","highlight_start":1,"highlight_end":64},{"text":"                4 int2_ff, //","highlight_start":1,"highlight_end":30},{"text":"                    //Routing free-fall event to INT1. Default value: 0","highlight_start":1,"highlight_end":72},{"text":"                    //(0: routing free-fall event to INT1 disabled;","highlight_start":1,"highlight_end":68},{"text":"                    //1: routing free-fall event to INT1 enabled)","highlight_start":1,"highlight_end":66},{"text":"                3 int2_double_tap, //","highlight_start":1,"highlight_end":38},{"text":"                    //Routing tap event to INT1. Default value: 0","highlight_start":1,"highlight_end":66},{"text":"                    //(0: routing double-tap event to INT1 disabled;","highlight_start":1,"highlight_end":69},{"text":"                    //1: routing double-tap event to INT1 enabled)","highlight_start":1,"highlight_end":67},{"text":"                2 int2_6d, //","highlight_start":1,"highlight_end":30},{"text":"                    //Routing 6D event to INT1. Default value: 0","highlight_start":1,"highlight_end":65},{"text":"                    //(0: routing 6D event to INT1 disabled;","highlight_start":1,"highlight_end":61},{"text":"                    //1: routing 6D event to INT1 enabled)","highlight_start":1,"highlight_end":59},{"text":"                1 int2_emb, //","highlight_start":1,"highlight_end":31},{"text":"                    //Routing embedded functions event to INT1. Default value: 0","highlight_start":1,"highlight_end":81},{"text":"                    //(0: routing embedded functions event to INT1 disabled;","highlight_start":1,"highlight_end":77},{"text":"                    //1: routing embedded functions event to INT1 enabled)","highlight_start":1,"highlight_end":75},{"text":"                0 int2_timestamp //","highlight_start":1,"highlight_end":36},{"text":"                    //Enables routing the alert for timestamp overflow within 5.6 ms","highlight_start":1,"highlight_end":85},{"text":"                    //to the INT2 pin.","highlight_start":1,"highlight_end":39},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x62 HAODR_CFG rw","highlight_start":1,"highlight_end":29},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                1..0 haodr_sel //","highlight_start":1,"highlight_end":34},{"text":"                    //Selects the ODR set supported when high-accuracy ODR (HAODR)","highlight_start":1,"highlight_end":83},{"text":"                    //mode is enabled (see Table 19. Accelerometer and gyroscope ODR","highlight_start":1,"highlight_end":85},{"text":"                    //selection in high-accuracy ODR mode). Defauly: 00","highlight_start":1,"highlight_end":72},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x63 EMB_FUNC_CFG rw","highlight_start":1,"highlight_end":32},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7 accel_dualc_batch_from_if, //","highlight_start":1,"highlight_end":48},{"text":"                    //When dual-channel mode is enabled, this bit enables batching","highlight_start":1,"highlight_end":83},{"text":"                    //the accelerometer channel 2 in FIFO. Default value: 0","highlight_start":1,"highlight_end":76},{"text":"                5 emb_func_irq_mask_g_settl, //","highlight_start":1,"highlight_end":48},{"text":"                    //Enables / masks execution trigger of the embedded functions when","highlight_start":1,"highlight_end":87},{"text":"                    //gyroscope data are settling. Default value: 0","highlight_start":1,"highlight_end":68},{"text":"                    //(0: disabled;","highlight_start":1,"highlight_end":36},{"text":"                    //1: masks execution trigger of the embedded functions until","highlight_start":1,"highlight_end":81},{"text":"                    //gyroscope filter settling ends)","highlight_start":1,"highlight_end":54},{"text":"                4 emb_func_irq_mask_accel_settl, //","highlight_start":1,"highlight_end":52},{"text":"                    //Enables / masks execution trigger of the embedded functions","highlight_start":1,"highlight_end":82},{"text":"                    //when accelerometer data are settling. Default value: 0","highlight_start":1,"highlight_end":77},{"text":"                    //(0: disabled;","highlight_start":1,"highlight_end":36},{"text":"                    //1: masks execution trigger of the embedded functions until","highlight_start":1,"highlight_end":81},{"text":"                    //accelerometer filter settling ends)","highlight_start":1,"highlight_end":58},{"text":"                3 emb_func_disable //","highlight_start":1,"highlight_end":38},{"text":"                    //Disables execution of the embedded functions. Default value: 0","highlight_start":1,"highlight_end":85},{"text":"                    //(0: disabled;","highlight_start":1,"highlight_end":36},{"text":"                    //1: embedded functions execution trigger is not generated anymore","highlight_start":1,"highlight_end":87},{"text":"                    //and all initialization procedures are forced when this bit is","highlight_start":1,"highlight_end":84},{"text":"                    //set back to 0).","highlight_start":1,"highlight_end":38},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x64 UI_HANDSHAKE_CTRL rw","highlight_start":1,"highlight_end":37},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                1 ui_shared_ack, //","highlight_start":1,"highlight_end":36},{"text":"                    //Primary interface side. This bit acknowledges the handshake.","highlight_start":1,"highlight_end":83},{"text":"                    //If the secondary interface is not accessing the shared","highlight_start":1,"highlight_end":77},{"text":"                    //registers, this bit is set to 1 by the device and the R/W","highlight_start":1,"highlight_end":80},{"text":"                    //operation on the UI_SPI2_SHARED_0 (65h) through","highlight_start":1,"highlight_end":70},{"text":"                    //UI_SPI2_SHARED_5 (6Ah) registers is allowed on the primary","highlight_start":1,"highlight_end":81},{"text":"                    //interface.","highlight_start":1,"highlight_end":33},{"text":"                0 ui_shared_req //","highlight_start":1,"highlight_end":35},{"text":"                    //This bit is used by the primary interface master to request","highlight_start":1,"highlight_end":82},{"text":"                    //access to the UI_SPI2_SHARED_0 (65h) through UI_SPI2_SHARED_5","highlight_start":1,"highlight_end":84},{"text":"                    //(6Ah) registers. When the R/W operation is finished, the master","highlight_start":1,"highlight_end":86},{"text":"                    //must reset this bit.","highlight_start":1,"highlight_end":43},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x65 UI_SPI2_SHARED_0 rw ui_spi2_shared_0, //UI/SPI2 shared registers","highlight_start":1,"highlight_end":81},{"text":"           0x66 UI_SPI2_SHARED_1 rw ui_spi2_shared_1,","highlight_start":1,"highlight_end":54},{"text":"           0x67 UI_SPI2_SHARED_2 rw ui_spi2_shared_2,","highlight_start":1,"highlight_end":54},{"text":"           0x68 UI_SPI2_SHARED_3 rw ui_spi2_shared_3,","highlight_start":1,"highlight_end":54},{"text":"           0x69 UI_SPI2_SHARED_4 rw ui_spi2_shared_4,","highlight_start":1,"highlight_end":54},{"text":"           0x6A UI_SPI2_SHARED_5 rw ui_spi2_shared_5,","highlight_start":1,"highlight_end":54},{"text":"                //Volatile byte is used as a contact point between the primary and","highlight_start":1,"highlight_end":83},{"text":"                //secondary interface host. These shared registers are accessible only","highlight_start":1,"highlight_end":87},{"text":"                //by one interface at a time and access is managed through the","highlight_start":1,"highlight_end":79},{"text":"                //UI_SHARED_ACK and UI_SHARED_REQ bits of register UI_HANDSHAKE_CTRL","highlight_start":1,"highlight_end":85},{"text":"                //(64h) and the SPI2_SHARED_ACK and SPI2_SHARED_REQ bits of register","highlight_start":1,"highlight_end":85},{"text":"                //SPI2_HANDSHAKE_CTRL (6Eh).","highlight_start":1,"highlight_end":45},{"text":"           0x6B CTRL_EIS rw","highlight_start":1,"highlight_end":28},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7..6 odr_gyro_eis, //","highlight_start":1,"highlight_end":38},{"text":"                    //Enables and selects the ODR of the gyroscope EIS channel.","highlight_start":1,"highlight_end":80},{"text":"                    //(00: EIS channel is off (default);","highlight_start":1,"highlight_end":57},{"text":"                    //01: 1.92 kHz;","highlight_start":1,"highlight_end":36},{"text":"                    //10: 960 Hz;","highlight_start":1,"highlight_end":34},{"text":"                    //11: reserved)","highlight_start":1,"highlight_end":36},{"text":"                4 lpg_gyro_eis_bw, //","highlight_start":1,"highlight_end":38},{"text":"                    //Gyroscope digital LPF_EIS filter bandwidth selection.","highlight_start":1,"highlight_end":76},{"text":"                    //Refer to Table 191 (datasheet).","highlight_start":1,"highlight_end":54},{"text":"                3 gyro_eis_on_gyro_ois_out, //","highlight_start":1,"highlight_end":47},{"text":"                    //Enables routing gyroscope EIS output to OIS from UI output","highlight_start":1,"highlight_end":81},{"text":"                    //addresses (2Eh – 33h). When this bit is set to 1, the","highlight_start":1,"highlight_end":76},{"text":"                    //gyroscope OIS data cannot be read from primary interface.","highlight_start":1,"highlight_end":80},{"text":"                    //Default value: 0","highlight_start":1,"highlight_end":39},{"text":"                2..0 fs_gyro_eis //","highlight_start":1,"highlight_end":36},{"text":"                    //Gyroscope full-scale selection for EIS channel. If the","highlight_start":1,"highlight_end":77},{"text":"                    //FS_G_[3:0] bits in CTRL6 (15h) are equal to 1100 (±4000 dps)","highlight_start":1,"highlight_end":83},{"text":"                    //FS_G_EIS_[2:0] must be set to \"100\" in order to have","highlight_start":1,"highlight_end":75},{"text":"                    //±4000 dpsfull scale on both UI and EIS channels. If the","highlight_start":1,"highlight_end":78},{"text":"                    //FS_G_3 bit in register CTRL6 (15h) is equal to 0, the EIS","highlight_start":1,"highlight_end":80},{"text":"                    //channel full scale can be selected as follows:","highlight_start":1,"highlight_end":69},{"text":"                    //(000: ±125 dps (default);","highlight_start":1,"highlight_end":48},{"text":"                    //001: ±250 dps;","highlight_start":1,"highlight_end":37},{"text":"                    //010: ±500 dps;","highlight_start":1,"highlight_end":37},{"text":"                    //011: ±1000 dps;","highlight_start":1,"highlight_end":38},{"text":"                    //100: ±2000 dps;","highlight_start":1,"highlight_end":38},{"text":"                    //others: reserved)","highlight_start":1,"highlight_end":40},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x6F UI_INT_OIS rw","highlight_start":1,"highlight_end":30},{"text":"               //OIS interrupt configuration register","highlight_start":1,"highlight_end":54},{"text":"               //The primary interface can write to this register when the","highlight_start":1,"highlight_end":75},{"text":"               //OIS_CTRL_FROM_UI bit in the FUNC_CFG_ACCESS (01h) register is equal","highlight_start":1,"highlight_end":85},{"text":"               //to 1 (primary IF full-control mode); this register is read-only","highlight_start":1,"highlight_end":81},{"text":"               //when the OIS_CTRL_FROM_UI bit is equal to 0 (SPI2 full-control mode)","highlight_start":1,"highlight_end":86},{"text":"               //and shows the content of the SPI2_INT_OIS (6Fh) register.","highlight_start":1,"highlight_end":75},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7 int2_drdy_ois, //","highlight_start":1,"highlight_end":36},{"text":"                    //Enables OIS chain DRDY on INT2 pin from the UI interface.","highlight_start":1,"highlight_end":80},{"text":"                    //This setting has priority over all other INT2 settings.","highlight_start":1,"highlight_end":78},{"text":"                6 drdy_mask_ois, //","highlight_start":1,"highlight_end":36},{"text":"                    //Enables / masks OIS data available. Default value: 0","highlight_start":1,"highlight_end":75},{"text":"                    //(0: disabled;","highlight_start":1,"highlight_end":36},{"text":"                    //1: masks OIS DRDY signals (both accelerometer and gyroscope)","highlight_start":1,"highlight_end":83},{"text":"                    //until filter settling ends (accelerometer and gyroscope","highlight_start":1,"highlight_end":78},{"text":"                    //independently masked))","highlight_start":1,"highlight_end":45},{"text":"                4 st_ois_clampdis //","highlight_start":1,"highlight_end":37},{"text":"                    //Disables OIS chain clamp during self-test. Default value: 0","highlight_start":1,"highlight_end":82},{"text":"                    //(0: All OIS chain outputs = 8000h during self-test;","highlight_start":1,"highlight_end":74},{"text":"                    //1: OIS chain self-test outputs)","highlight_start":1,"highlight_end":54},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x70 UI_CTRL1_OIS r","highlight_start":1,"highlight_end":31},{"text":"               //OIS configuration register","highlight_start":1,"highlight_end":44},{"text":"               //The primary interface can write this register when the","highlight_start":1,"highlight_end":72},{"text":"               //OIS_CTRL_FROM_UI bit in the FUNC_CFG_ACCESS (01h) register is equal","highlight_start":1,"highlight_end":85},{"text":"               //to 1 (primary IF full-control mode); this register is read-only","highlight_start":1,"highlight_end":81},{"text":"               //when the OIS_CTRL_FROM_UI bit is equal to 0 (SPI2 full-control mode)","highlight_start":1,"highlight_end":86},{"text":"               //and shows the content of the SPI2_CTRL1_OIS (70h) register.","highlight_start":1,"highlight_end":77},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                5 sim_ois, //SPI2 3- or 4-wire interface. Default value: 0","highlight_start":1,"highlight_end":75},{"text":"                2 ois_accel_en, //Enables accelerometer OIS chain. Default value: 0","highlight_start":1,"highlight_end":84},{"text":"                1 ois_gyro_en, //Enables gyroscope OIS chain. Default value: 0","highlight_start":1,"highlight_end":79},{"text":"                0 spi2_read_en //In primary IF full-control mode, enables auxiliary","highlight_start":1,"highlight_end":84},{"text":"                    //SPI for reading OIS data in registers SPI2_OUTX_L_G_OIS (22h)","highlight_start":1,"highlight_end":84},{"text":"                    //and SPI2_OUTX_H_G_OIS (23h) through Section 11.9","highlight_start":1,"highlight_end":71},{"text":"                    //SPI2_OUTZ_L_A_OIS (2Ch) and SPI2_OUTZ_H_A_OIS (2Dh).","highlight_start":1,"highlight_end":75},{"text":"                    //Default value: 0","highlight_start":1,"highlight_end":39},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x71 UI_CTRL2_OIS r //read-only in SPI2 mode b/c redundant, but I'm not","highlight_start":1,"highlight_end":83},{"text":"               //sure which mode we're running this in.","highlight_start":1,"highlight_end":56},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                4..3 lpf1_gyro_ois_bw, //Gyroscope OIS bandwidth selection.","highlight_start":1,"highlight_end":76},{"text":"                    //Value     Cutoff(Hz)      Phase @20Hz(�)","highlight_start":1,"highlight_end":63},{"text":"                    //00        293             -7.1","highlight_start":1,"highlight_end":53},{"text":"                    //01        217             -9.1","highlight_start":1,"highlight_end":53},{"text":"                    //10        158             -11.9","highlight_start":1,"highlight_end":54},{"text":"                    //11        476             -5.1","highlight_start":1,"highlight_end":53},{"text":"                2..0 fs_gyro_ois //Gyro OIS full-scale selection.","highlight_start":1,"highlight_end":66},{"text":"                    //000: ±125 dps","highlight_start":1,"highlight_end":36},{"text":"                    //001: ±250 dps","highlight_start":1,"highlight_end":36},{"text":"                    //010: ±500 dps","highlight_start":1,"highlight_end":36},{"text":"                    //011: ±1000 dps","highlight_start":1,"highlight_end":37},{"text":"                    //100: ±2000 dps","highlight_start":1,"highlight_end":37},{"text":"                    //Others reserved","highlight_start":1,"highlight_end":38},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x72 UI_CTRL3_OIS r","highlight_start":1,"highlight_end":31},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                5..3 lpf_accel_ois_bw, //Selects accel OIS channel bandwidth,","highlight_start":1,"highlight_end":78},{"text":"                    //Default value 0.","highlight_start":1,"highlight_end":39},{"text":"                    //Value     Typ. Overall BW (Hz)    Typ. Overall Phase @20Hz(�)","highlight_start":1,"highlight_end":84},{"text":"                    //000       749                     -3.41    ","highlight_start":1,"highlight_end":66},{"text":"                    //001       539                     -4.04","highlight_start":1,"highlight_end":62},{"text":"                    //010       342                     -5.31","highlight_start":1,"highlight_end":62},{"text":"                    //011       162                     -9.08","highlight_start":1,"highlight_end":62},{"text":"                    //100       78.5                    -16.4","highlight_start":1,"highlight_end":62},{"text":"                    //101       38.6                    -29.6","highlight_start":1,"highlight_end":62},{"text":"                    //110       19.3                    -28.8","highlight_start":1,"highlight_end":62},{"text":"                    //111       9.8                     -29.1","highlight_start":1,"highlight_end":62},{"text":"                    //Default 0.","highlight_start":1,"highlight_end":33},{"text":"                1..0 fs_accel_ois //Selects accel OIS channel full-scale.","highlight_start":1,"highlight_end":74},{"text":"                    //00: ±2 g default)","highlight_start":1,"highlight_end":40},{"text":"                    //01: ±4g","highlight_start":1,"highlight_end":30},{"text":"                    //10: ±8 ","highlight_start":1,"highlight_end":30},{"text":"                    //11: ±16 ","highlight_start":1,"highlight_end":31},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"           0x73 X_OFS_USR rw usr_offset_x,","highlight_start":1,"highlight_end":43},{"text":"           0x74 Y_OFS_USR rw usr_offset_y,","highlight_start":1,"highlight_end":43},{"text":"           0x75 Z_OFS_USR rw usr_offset_z,","highlight_start":1,"highlight_end":43},{"text":"           0x78 FIFO_DATA_OUT_TAG r","highlight_start":1,"highlight_end":36},{"text":"           {","highlight_start":1,"highlight_end":13},{"text":"                7..3 tag_sensor, //FIFO tag. Identifies sensor used for FIFO data.","highlight_start":1,"highlight_end":83},{"text":"                    //Value     Sensor","highlight_start":1,"highlight_end":39},{"text":"                    //0x00      FIFO empty","highlight_start":1,"highlight_end":43},{"text":"                    //0x01      Gyroscope NC","highlight_start":1,"highlight_end":45},{"text":"                    //0x02      Accelerometer NC","highlight_start":1,"highlight_end":49},{"text":"                    //0x03      Temperature","highlight_start":1,"highlight_end":44},{"text":"                    //0x04      Timestamp","highlight_start":1,"highlight_end":42},{"text":"                    //0x05      CFG_Change","highlight_start":1,"highlight_end":43},{"text":"                    //0x06      Accelerometer NC_T_2","highlight_start":1,"highlight_end":53},{"text":"                    //0x07      Accelerometer NC_T_1","highlight_start":1,"highlight_end":53},{"text":"                    //0x08      Accelerometer 2xC","highlight_start":1,"highlight_end":50},{"text":"                    //0x09      Accelerometer 3xC","highlight_start":1,"highlight_end":50},{"text":"                    //0x0A      Gyroscope NC_T_2","highlight_start":1,"highlight_end":49},{"text":"                    //0x0B      Gyroscope NC_T_1","highlight_start":1,"highlight_end":49},{"text":"                    //0x0C      Gyroscope 2xC","highlight_start":1,"highlight_end":46},{"text":"                    //0x0D      Gyroscope 3xC","highlight_start":1,"highlight_end":46},{"text":"                    //0x0E      Sensor hub slave 0","highlight_start":1,"highlight_end":51},{"text":"                    //0x0F      Sensor hub slave 1","highlight_start":1,"highlight_end":51},{"text":"                    //0x10      Sensor hub slave 2","highlight_start":1,"highlight_end":51},{"text":"                    //0x11      Sensor hub slave 3","highlight_start":1,"highlight_end":51},{"text":"                    //0x12      Step counter","highlight_start":1,"highlight_end":45},{"text":"                    //0x13      SFLP game rotation vector","highlight_start":1,"highlight_end":58},{"text":"                    //0x16      SFLP gyroscope bias","highlight_start":1,"highlight_end":52},{"text":"                    //0x17      SFLP gravity vector","highlight_start":1,"highlight_end":52},{"text":"                    //0x19      Sensor hub nack","highlight_start":1,"highlight_end":48},{"text":"                    //0x1D      Accelerometer dualC","highlight_start":1,"highlight_end":52},{"text":"                    //0x1E      Enhanced EIS gyroscope","highlight_start":1,"highlight_end":55},{"text":"                    //Others reserved","highlight_start":1,"highlight_end":38},{"text":"                2..1 tag_counter //2-bit counter which identifies sensor time slot","highlight_start":1,"highlight_end":83},{"text":"           },","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"dev_csr!","def_site_span":{"file_name":"/Users/BrianL/Documents/GitHub/dev-csr/dev-csr-macro/src/lib.rs","byte_start":830,"byte_end":879,"line_start":39,"line_end":39,"column_start":1,"column_end":50,"is_primary":false,"text":[{"text":"pub fn dev_csr(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src/lib.rs","byte_start":46367,"byte_end":46379,"line_start":902,"line_end":902,"column_start":21,"column_end":33,"is_primary":true,"text":[{"text":"impl <S: SpiHandle> WriteLsm6dsv for Lsm6dsv<S> {","highlight_start":21,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a trait with a similar name exists","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":46367,"byte_end":46379,"line_start":902,"line_end":902,"column_start":21,"column_end":33,"is_primary":true,"text":[{"text":"impl <S: SpiHandle> WriteLsm6dsv for Lsm6dsv<S> {","highlight_start":21,"highlight_end":33}],"label":null,"suggested_replacement":"WriteLsm6dso","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `WriteLsm6dsv` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:902:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mdev_csr! {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named trait `WriteLsm6dso` defined here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m902\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl <S: SpiHandle> WriteLsm6dsv for Lsm6dsv<S> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a trait with a similar name exists: `WriteLsm6dso`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `fmt::Debug` and `mem`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":23,"byte_end":33,"line_start":3,"line_end":3,"column_start":12,"column_end":22,"is_primary":true,"text":[{"text":"use core::{fmt::Debug, mem};","highlight_start":12,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":35,"byte_end":38,"line_start":3,"line_end":3,"column_start":24,"column_end":27,"is_primary":true,"text":[{"text":"use core::{fmt::Debug, mem};","highlight_start":24,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":12,"byte_end":41,"line_start":3,"line_end":4,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use core::{fmt::Debug, mem};","highlight_start":1,"highlight_end":29},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `fmt::Debug` and `mem`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:3:12\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse core::{fmt::Debug, mem};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `embassy_futures::yield_now`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":68,"byte_end":94,"line_start":6,"line_end":6,"column_start":5,"column_end":31,"is_primary":true,"text":[{"text":"use embassy_futures::yield_now;","highlight_start":5,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":64,"byte_end":96,"line_start":6,"line_end":7,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use embassy_futures::yield_now;","highlight_start":1,"highlight_end":32},{"text":"use embedded_hal::spi::{ ErrorKind as SpiError, ErrorType};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `embassy_futures::yield_now`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:6:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse embassy_futures::yield_now;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `ErrorKind as SpiError`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":121,"byte_end":142,"line_start":7,"line_end":7,"column_start":26,"column_end":47,"is_primary":true,"text":[{"text":"use embedded_hal::spi::{ ErrorKind as SpiError, ErrorType};","highlight_start":26,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":119,"byte_end":121,"line_start":7,"line_end":7,"column_start":24,"column_end":26,"is_primary":true,"text":[{"text":"use embedded_hal::spi::{ ErrorKind as SpiError, ErrorType};","highlight_start":24,"highlight_end":26}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/lib.rs","byte_start":121,"byte_end":144,"line_start":7,"line_end":7,"column_start":26,"column_end":49,"is_primary":true,"text":[{"text":"use embedded_hal::spi::{ ErrorKind as SpiError, ErrorType};","highlight_start":26,"highlight_end":49}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/lib.rs","byte_start":153,"byte_end":154,"line_start":7,"line_end":7,"column_start":58,"column_end":59,"is_primary":true,"text":[{"text":"use embedded_hal::spi::{ ErrorKind as SpiError, ErrorType};","highlight_start":58,"highlight_end":59}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `ErrorKind as SpiError`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:7:26\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse embedded_hal::spi::{ ErrorKind as SpiError, ErrorType};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"ambiguous associated type","code":{"code":"E0223","explanation":"An attempt was made to retrieve an associated type, but the type was ambiguous.\n\nErroneous code example:\n\n```compile_fail,E0223\ntrait Trait { type X; }\n\nfn main() {\n    let foo: Trait::X;\n}\n```\n\nThe problem here is that we're attempting to take the associated type of `X`\nfrom `Trait`. Unfortunately, the type of `X` is not defined, because it's only\nmade concrete in implementations of the trait. A working version of this code\nmight look like:\n\n```\ntrait Trait { type X; }\n\nstruct Struct;\nimpl Trait for Struct {\n    type X = u32;\n}\n\nfn main() {\n    let foo: <Struct as Trait>::X;\n}\n```\n\nThis syntax specifies that we want the associated type `X` from `Struct`'s\nimplementation of `Trait`.\n\nDue to internal limitations of the current compiler implementation we cannot\nsimply use `Struct::X`.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":45584,"byte_end":45595,"line_start":871,"line_end":871,"column_start":20,"column_end":31,"is_primary":true,"text":[{"text":"    ) -> Result<(),Self::Error> {","highlight_start":20,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use fully-qualified syntax","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":45584,"byte_end":45595,"line_start":871,"line_end":871,"column_start":20,"column_end":31,"is_primary":true,"text":[{"text":"    ) -> Result<(),Self::Error> {","highlight_start":20,"highlight_end":31}],"label":null,"suggested_replacement":"<Lsm6dsv<S> as TryFrom>::Error","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/lib.rs","byte_start":45584,"byte_end":45595,"line_start":871,"line_end":871,"column_start":20,"column_end":31,"is_primary":true,"text":[{"text":"    ) -> Result<(),Self::Error> {","highlight_start":20,"highlight_end":31}],"label":null,"suggested_replacement":"<Lsm6dsv<S> as TryInto>::Error","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0223]\u001b[0m\u001b[0m\u001b[1m: ambiguous associated type\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:871:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m871\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ) -> Result<(),Self::Error> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use fully-qualified syntax\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m871\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    ) -> Result<(),\u001b[0m\u001b[0m\u001b[38;5;10m<Lsm6dsv<S> as TryFrom>::Error\u001b[0m\u001b[0m> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m871\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    ) -> Result<(),\u001b[0m\u001b[0m\u001b[38;5;10m<Lsm6dsv<S> as TryInto>::Error\u001b[0m\u001b[0m> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"inherent associated types are unstable","code":{"code":"E0658","explanation":"An unstable feature was used.\n\nErroneous code example:\n\n```compile_fail,E0658\n#[repr(u128)] // error: use of unstable library feature 'repr128'\nenum Foo {\n    Bar(u64),\n}\n```\n\nIf you're using a stable or a beta version of rustc, you won't be able to use\nany unstable features. In order to do so, please switch to a nightly version of\nrustc (by using [rustup]).\n\nIf you're using a nightly version of rustc, just add the corresponding feature\nto be able to use it:\n\n```\n#![feature(repr128)]\n\n#[repr(u128)] // ok!\nenum Foo {\n    Bar(u64),\n}\n```\n\n[rustup]: https://rust-lang.github.io/rustup/concepts/channels.html\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":45406,"byte_end":45448,"line_start":863,"line_end":863,"column_start":5,"column_end":47,"is_primary":true,"text":[{"text":"    type Error = <S::Bus as ErrorType>::Error;","highlight_start":5,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"see issue #8995 <https://github.com/rust-lang/rust/issues/8995> for more information","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0658]\u001b[0m\u001b[0m\u001b[1m: inherent associated types are unstable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:863:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m863\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type Error = <S::Bus as ErrorType>::Error;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see issue #8995 <https://github.com/rust-lang/rust/issues/8995> for more information\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"ambiguous associated type","code":{"code":"E0223","explanation":"An attempt was made to retrieve an associated type, but the type was ambiguous.\n\nErroneous code example:\n\n```compile_fail,E0223\ntrait Trait { type X; }\n\nfn main() {\n    let foo: Trait::X;\n}\n```\n\nThe problem here is that we're attempting to take the associated type of `X`\nfrom `Trait`. Unfortunately, the type of `X` is not defined, because it's only\nmade concrete in implementations of the trait. A working version of this code\nmight look like:\n\n```\ntrait Trait { type X; }\n\nstruct Struct;\nimpl Trait for Struct {\n    type X = u32;\n}\n\nfn main() {\n    let foo: <Struct as Trait>::X;\n}\n```\n\nThis syntax specifies that we want the associated type `X` from `Struct`'s\nimplementation of `Trait`.\n\nDue to internal limitations of the current compiler implementation we cannot\nsimply use `Struct::X`.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":46067,"byte_end":46078,"line_start":889,"line_end":889,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"    ) -> Result<(), Self::Error> {","highlight_start":21,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use fully-qualified syntax","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":46067,"byte_end":46078,"line_start":889,"line_end":889,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"    ) -> Result<(), Self::Error> {","highlight_start":21,"highlight_end":32}],"label":null,"suggested_replacement":"<Lsm6dsv<S> as TryFrom>::Error","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/lib.rs","byte_start":46067,"byte_end":46078,"line_start":889,"line_end":889,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"    ) -> Result<(), Self::Error> {","highlight_start":21,"highlight_end":32}],"label":null,"suggested_replacement":"<Lsm6dsv<S> as TryInto>::Error","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0223]\u001b[0m\u001b[0m\u001b[1m: ambiguous associated type\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:889:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m889\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ) -> Result<(), Self::Error> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use fully-qualified syntax\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m889\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    ) -> Result<(), \u001b[0m\u001b[0m\u001b[38;5;10m<Lsm6dsv<S> as TryFrom>::Error\u001b[0m\u001b[0m> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m889\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    ) -> Result<(), \u001b[0m\u001b[0m\u001b[38;5;10m<Lsm6dsv<S> as TryInto>::Error\u001b[0m\u001b[0m> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"ambiguous associated type","code":{"code":"E0223","explanation":"An attempt was made to retrieve an associated type, but the type was ambiguous.\n\nErroneous code example:\n\n```compile_fail,E0223\ntrait Trait { type X; }\n\nfn main() {\n    let foo: Trait::X;\n}\n```\n\nThe problem here is that we're attempting to take the associated type of `X`\nfrom `Trait`. Unfortunately, the type of `X` is not defined, because it's only\nmade concrete in implementations of the trait. A working version of this code\nmight look like:\n\n```\ntrait Trait { type X; }\n\nstruct Struct;\nimpl Trait for Struct {\n    type X = u32;\n}\n\nfn main() {\n    let foo: <Struct as Trait>::X;\n}\n```\n\nThis syntax specifies that we want the associated type `X` from `Struct`'s\nimplementation of `Trait`.\n\nDue to internal limitations of the current compiler implementation we cannot\nsimply use `Struct::X`.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":46575,"byte_end":46586,"line_start":909,"line_end":909,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"    ) -> Result<(), Self::Error> {","highlight_start":21,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use fully-qualified syntax","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":46575,"byte_end":46586,"line_start":909,"line_end":909,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"    ) -> Result<(), Self::Error> {","highlight_start":21,"highlight_end":32}],"label":null,"suggested_replacement":"<Lsm6dsv<S> as TryFrom>::Error","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/lib.rs","byte_start":46575,"byte_end":46586,"line_start":909,"line_end":909,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"    ) -> Result<(), Self::Error> {","highlight_start":21,"highlight_end":32}],"label":null,"suggested_replacement":"<Lsm6dsv<S> as TryInto>::Error","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0223]\u001b[0m\u001b[0m\u001b[1m: ambiguous associated type\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:909:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m909\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ) -> Result<(), Self::Error> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use fully-qualified syntax\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m909\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    ) -> Result<(), \u001b[0m\u001b[0m\u001b[38;5;10m<Lsm6dsv<S> as TryFrom>::Error\u001b[0m\u001b[0m> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m909\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    ) -> Result<(), \u001b[0m\u001b[0m\u001b[38;5;10m<Lsm6dsv<S> as TryInto>::Error\u001b[0m\u001b[0m> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 6 previous errors; 3 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 6 previous errors; 3 warnings emitted\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0223, E0405, E0658.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0223, E0405, E0658.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0223`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0223`.\u001b[0m\n"}
